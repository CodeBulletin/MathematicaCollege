(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    340962,       6718]
NotebookOptionsPosition[    331160,       6538]
NotebookOutlinePosition[    332509,       6582]
CellTagsIndexPosition[    332466,       6579]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Practical 2",
 FontColor->RGBColor[0, 1, 1]]], "Title",
 CellChangeTimes->{{3.8415468665751*^9, 3.8415468693923235`*^9}},
 TextAlignment->Center,ExpressionUUID->"d02dcc12-b590-46e3-b20d-47bb4b203632"],

Cell["Second Order Ordinary Differential Equations", "Subtitle",
 CellChangeTimes->{{3.841546922495946*^9, 3.8415469497178345`*^9}, {
  3.845955547360468*^9, 3.845955548814196*^9}},
 TextAlignment->Center,ExpressionUUID->"6f90060a-c910-4dfd-bb38-a3472f81b8b2"],

Cell[TextData[{
 "Second order ordinary differential equations: The differential equations \
that involves the second order derivatives of dependent variable with respect \
to independent variable\n\nCommand: ",
 StyleBox["DSolve[Differential Equation, y[x], x]",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Subsection",
 CellChangeTimes->{{3.841547066281339*^9, 3.841547367823062*^9}, {
  3.8415473988636246`*^9, 3.8415474390632877`*^9}, {3.845955576873558*^9, 
  3.845955604229581*^9}},ExpressionUUID->"36a5d6cb-d347-4e7d-9e9f-\
c59272907eec"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Q1 Solve the following second order ordinary differential equation \
",
  FontSize->18],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "y"}], 
      SuperscriptBox["dx", "2"]], "+", " ", 
     RowBox[{"3", 
      FractionBox["dy", "dx"]}], "+", " ", "y"}], " ", "=", " ", "0"}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c9ad2d77-6a7b-47d3-af7f-23382f7c0f17"]
}], "Subsection",
 CellChangeTimes->{{3.8415474662984734`*^9, 3.8415475369498286`*^9}, {
  3.8415486180203023`*^9, 3.8415486225756445`*^9}, {3.8459391876070404`*^9, 
  3.845939188555458*^9}, {3.8459392899583836`*^9, 
  3.845939376309356*^9}},ExpressionUUID->"87a42d99-5a7d-4a4b-813d-\
932e772a72b2"],

Cell[TextData[StyleBox["1. Solve y'' (x) + 3y\[CloseCurlyQuote](x)+y=0",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8415475383917856`*^9, 3.8415475804938183`*^9}, {
   3.841548664782364*^9, 3.8415486675286756`*^9}, 
   3.8459393401664762`*^9},ExpressionUUID->"8e90e40a-7f61-4019-96b4-\
ab49f0481d73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq1", "=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], " ", "+", " ", 
     RowBox[{"3", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], " ", "+", " ", 
     RowBox[{"2", 
      RowBox[{"y", "[", "x", "]"}]}]}], " ", "==", " ", "0"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.8415480019619675`*^9, 3.8415480084923086`*^9}, {
  3.841548050653679*^9, 3.8415480527221885`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"728dbf45-2be4-4c82-a77a-7c8f1aecad4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{"3", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.8415480152237024`*^9, 3.8415480531318903`*^9, 
  3.8415502081590767`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"454cfc73-b3fb-45ba-add6-16ec652faa04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GS1", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eq1", ",", " ", 
    RowBox[{"y", "[", "x", "]"}], ",", " ", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.841547583572585*^9, 3.8415476177826166`*^9}, 
   3.841547668165934*^9, 3.8415478585025377`*^9, {3.841547999263719*^9, 
   3.841548013294275*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"5bd9a927-0c29-4927-ace1-0f9c66408f5e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "x"}]], " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]], " ", 
      TemplateBox[{"2"},
       "C"]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.841547624411706*^9, 3.841547668910844*^9, {3.841547859724581*^9, 
   3.841547884510466*^9}, 3.8415480169865503`*^9, 3.8415480550426908`*^9, 
   3.8415502090000687`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"6214c19e-46b8-4e62-a8c6-52a209587a53"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.841548488067194*^9, 
  3.84154861073958*^9},ExpressionUUID->"85d6e38e-2d29-43f5-a129-72378cac4661"],

Cell[TextData[StyleBox["2. Solve the above differential equation using the \
initial conditions given as\[LineSeparator]y(0)= 1 and \
y\[CloseCurlyQuote](0)= 5",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8415475383917856`*^9, 3.8415475804938183`*^9}, {
  3.841547714855311*^9, 3.8415477707922544`*^9}, {3.841548482559997*^9, 
  3.841548485734109*^9}, {3.841548913320019*^9, 
  3.841548914903326*^9}},ExpressionUUID->"9bee83a9-0bed-403d-bf5a-\
fbf594d6493f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PS1", " ", "=", " ", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/.", 
     RowBox[{"GS1", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"1"},
        "C"], "->", "1"}], ",", " ", 
      RowBox[{
       TemplateBox[{"2"},
        "C"], "->", "5"}]}], "}"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.8415477856974025`*^9, 3.8415477870195136`*^9}, {
  3.8415478537367554`*^9, 3.8415478554479136`*^9}, {3.8415478878958178`*^9, 
  3.841547898866685*^9}, {3.841547989161253*^9, 3.841548102696391*^9}, {
  3.841548133205283*^9, 3.8415481483402805`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"d9c0d82b-5f36-4e81-b63c-205b6a7b6a48"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "x"}]], "+", 
  RowBox[{"5", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]]}]}]], "Output",
 CellChangeTimes->{{3.8415481177557387`*^9, 3.8415481491507483`*^9}, 
   3.8415502122246904`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"50fd51c9-ac29-4f7f-b100-d3fc0c73a18c"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.8415484903975644`*^9, 
  3.8415486138123183`*^9},ExpressionUUID->"87eda597-0d47-4bae-a215-\
dbd2a6e35b11"],

Cell[TextData[StyleBox["3. Solve the above differential equation using the \
initial conditions given as\[LineSeparator]y(0)= 1, 2, -1 and y\
\[CloseCurlyQuote](0)= 5, 4, 6 and plot the graphs",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8415475383917856`*^9, 3.8415475804938183`*^9}, {
  3.841547714855311*^9, 3.8415477707922544`*^9}, {3.8415482741162243`*^9, 
  3.8415483208190427`*^9}, {3.8415484680690794`*^9, 3.8415484798078566`*^9}, {
  3.841548918259204*^9, 3.8415489223133554`*^9}, {3.8415495530347576`*^9, 
  3.8415495539412537`*^9}},ExpressionUUID->"e288db28-d4db-489c-bac2-\
977ac143f384"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PSX1", " ", "=", " ", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/.", 
     RowBox[{"GS1", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"1"},
        "C"], "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "2", ",", " ", 
         RowBox[{"-", "1"}]}], "}"}]}], ",", " ", 
      RowBox[{
       TemplateBox[{"2"},
        "C"], "->", 
       RowBox[{"{", 
        RowBox[{"5", ",", " ", "4", ",", " ", "6"}], "}"}]}]}], "}"}]}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.841548309335477*^9, 3.8415483410444107`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"0f9e0273-69a6-4c3f-b1b4-4c10fdb381f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "x"}]], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "x"}]]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "x"}]]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.841548344767888*^9, 3.8415502153895435`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"b67ddcea-61eb-4c76-b0f7-15a25a050c1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"PSX1", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", "Thick"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Green", ",", " ", "Thick"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Thick"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "PSX1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8415483620828695`*^9, 3.8415484173204575`*^9}, {
  3.841548563227775*^9, 3.8415485885494246`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"b8f6f812-b19f-4b06-8bac-a5bcaa703f30"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
szc2iBAnsrPX/5aF/gFdVnQx
          "]]}, Annotation[#, "Charting`Private`Tag$7445#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$7445#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
uNSGn3oZP7W0RAVyd51X50234f8DchZT/w==
          "]]}, Annotation[#, "Charting`Private`Tag$7445#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3, 3}, {-63.41374424826538, 106.96525666858949`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
            RowBox[{"-", "2"}], " ", 
            TagBox["x", HoldForm]}]], "+", 
         RowBox[{"5", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
              TagBox["x", HoldForm]}]]}]}], 
       RowBox[{
         RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{"-", "2"}], " ", 
              TagBox["x", HoldForm]}]]}], "+", 
         RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
              TagBox["x", HoldForm]}]]}]}], 
       RowBox[{
         RowBox[{"6", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
              TagBox["x", HoldForm]}]]}], "-", 
         RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{"-", "2"}], " ", 
              TagBox["x", HoldForm]}]]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.841548395414299*^9, 3.841548418480526*^9}, 
   3.8415485895555096`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"6fa8528d-5921-4639-8924-f1357f2c23a1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Q2 Solve the following second order ordinary differential equation \
",
  FontSize->18],
 "  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "y"}], 
      SuperscriptBox["dx", "2"]], "+", " ", "y"}], " ", "=", " ", 
    RowBox[{"sec", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "7daf3823-3519-4456-9341-3e9919542e1e"]
}], "Subsection",
 CellChangeTimes->{{3.8415474662984734`*^9, 3.8415475369498286`*^9}, {
   3.8415486180203023`*^9, 3.8415486225756445`*^9}, {3.841548813901426*^9, 
   3.84154881403327*^9}, {3.8459391830381556`*^9, 3.845939183361126*^9}, 
   3.8459392259175577`*^9, {3.8459393936729627`*^9, 
   3.8459394288641353`*^9}},ExpressionUUID->"be052b5d-6d27-45dc-b4aa-\
82ca7c7d9b95"],

Cell[TextData[StyleBox["1. Solve y'' (x) + y(x) = sec(x)",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8415475383917856`*^9, 3.8415475804938183`*^9}, {
  3.841548664782364*^9, 3.8415486675286756`*^9}, {3.8415488487584443`*^9, 
  3.8415488590313487`*^9}, {3.8415489562995787`*^9, 
  3.8415489569526377`*^9}},ExpressionUUID->"f01442db-047c-4c9a-9fc9-\
2e6ae76b8785"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq2", "=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], " ", "+", " ", 
     RowBox[{"y", "[", "x", "]"}]}], " ", "==", " ", 
    RowBox[{"Sec", "[", "x", "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8415480019619675`*^9, 3.8415480084923086`*^9}, {
  3.841548050653679*^9, 3.8415480527221885`*^9}, {3.841548948076462*^9, 
  3.841548964761483*^9}, {3.841549110317995*^9, 3.8415491182776775`*^9}, {
  3.8415492997273207`*^9, 3.8415493049354715`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e283218a-45b3-4e63-8200-4914419a62fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{"Sec", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.8415480152237024`*^9, 3.8415480531318903`*^9, 
  3.8415489678661413`*^9, 3.8415491187108283`*^9, 3.8415493617215567`*^9, 
  3.8415502188425016`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"364a7cef-443f-4c10-aea2-401cab0deaaa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GS2", " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eq2", ",", " ", 
    RowBox[{"y", "[", "x", "]"}], ",", " ", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.841547583572585*^9, 3.8415476177826166`*^9}, 
   3.841547668165934*^9, 3.8415478585025377`*^9, {3.841547999263719*^9, 
   3.841548013294275*^9}, {3.841548971006971*^9, 3.84154897826031*^9}, {
   3.841549301714411*^9, 3.841549314954254*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e7ab7dab-192e-414c-9abc-9833bde60551"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "+", 
     RowBox[{"x", " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], "+", 
     RowBox[{
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.841550224350073*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"6ede0180-78ae-46f4-b8ae-b7d423b391c9"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.841548488067194*^9, 
  3.84154861073958*^9},ExpressionUUID->"fb8b8b49-4595-45ee-9073-2001f2344338"],

Cell[TextData[StyleBox["2. Solve the above differential equation using the \
initial conditions given as\[LineSeparator]y(0)= -14, -10, 2 and y\
\[CloseCurlyQuote](0)= 4, -1, 3 and plot the graph",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8415475383917856`*^9, 3.8415475804938183`*^9}, {
  3.841547714855311*^9, 3.8415477707922544`*^9}, {3.841548482559997*^9, 
  3.841548485734109*^9}, {3.841548883684471*^9, 
  3.8415489325366697`*^9}},ExpressionUUID->"ff13e84c-f64a-41d9-a529-\
c94bcd2f65cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PSX2", " ", "=", " ", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/.", 
     RowBox[{"GS2", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"1"},
        "C"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "14"}], ",", " ", 
         RowBox[{"-", "10"}], ",", " ", "2"}], "}"}]}], ",", " ", 
      RowBox[{
       TemplateBox[{"2"},
        "C"], "->", 
       RowBox[{"{", 
        RowBox[{"4", ",", " ", 
         RowBox[{"-", "1"}], ",", " ", "3"}], "}"}]}]}], "}"}]}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8415477856974025`*^9, 3.8415477870195136`*^9}, {
  3.8415478537367554`*^9, 3.8415478554479136`*^9}, {3.8415478878958178`*^9, 
  3.841547898866685*^9}, {3.841547989161253*^9, 3.841548102696391*^9}, {
  3.841548133205283*^9, 3.8415481483402805`*^9}, {3.8415489847670283`*^9, 
  3.8415490167755365`*^9}, {3.841549317823715*^9, 3.84154932773706*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"c71bc020-b7ca-47d3-9cb9-fd74027167f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "14"}], " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], "+", 
    RowBox[{"x", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "10"}], " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "-", 
    RowBox[{"Sin", "[", "x", "]"}], "+", 
    RowBox[{"x", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "+", 
    RowBox[{"3", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], "+", 
    RowBox[{"x", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8415481177557387`*^9, 3.8415481491507483`*^9}, {
   3.8415490128345375`*^9, 3.8415490188610244`*^9}, 3.8415491315649157`*^9, 
   3.841549365965623*^9, 3.841550230482766*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"b0831a20-fdb1-4743-9e4e-5c6d65dd31e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"PSX2", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", "Thick"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Green", ",", " ", "Thick"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Thick"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "PSX2"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8415484903975644`*^9, 3.8415486138123183`*^9, {3.8415490297335663`*^9, 
   3.8415490773605165`*^9}, {3.841549137722166*^9, 3.8415491491509485`*^9}, {
   3.841549320894661*^9, 3.841549323989072*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"fb289a64-88f5-4752-93c5-b60cd5b740d8"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
ltz8eUuGq5U07X9djNmO
          "]]}, Annotation[#, "Charting`Private`Tag$7075#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwV1nk4Vd0XB3AZXhGiQl5D7j2XkFSSqWE1aI5QiZSURNHwypgGoTIkQ0gl
FVIqrhDXuHdmMss8XjJkiohLht/+/XGe83yeZ/+zztlrrS/t/DVja24uLq5f
5Pn/W9Gc/XKINoO2Uu9mjgbx7ryeWMJky86ggdwLa/fb8+5sNtAXSBKYQQ1L
C00Xy3l2fgo0yT7C5qC8q+ECDnHcOzkh7j4IOEhsIL6o+dscxIh0SEWwp5CZ
1FkVfLgfIg9tcqjz/YNc387eiY6oQZ7251yVD06ih1rl6Ws6fyN3ng8uDiO/
UVCJXro7/xJ8zqOK0fB+HHVs+P7Hr4Mfh+X0RkReHkOPEi7skDMWwZmdSkKf
6KMotyuPM+SxAlOiO3cfjxpCFomSfhLO4jhZxedyd88ActQ4cdDYbTXuLPws
r6nZh1w8Q3fwa0vjXtUwdZTWg2LeBuxe+UQWi92J11RbwkbTizdn9/5Yg1U1
f6m+nWhDJuG9CiUD8thLb6Q6w7URXTHiyrpVQ8N5B4aPalg1Is7Cr+6C7zTM
pT9UmajfiF4ZpZQINtHwrRM/y2PojejBpFl5YAcNO1/sLQkob0Ajw2kf7gzR
sK1POz4n34DSjvW7/uKl4yPlFUkCJd/RSv/HotKadCx+PDHITLIWOT31C/MJ
puNkRf/MvTy1qNlffvvyUDo2nLH5selXDTqppd72JJyO/aJo2oLFNYgt1bEY
/oKOFwZCOzOda1A/mm7wfkvHfbfd1WQaqtFxnsLgBRYdXz0aHJGjXIXsGClM
2w46fj95aDhsSRXScnNtSuii4+5nvDuvNlei1oCs8bFuOjb54dIv51uJSnX6
J6/30zG4WWh6DFSg24GrtE3H6Fg0Zt333e/KkW+NhXf+EgonTxUuL2GUoZI/
07XLKAo//hCdt2OmFOUJGQ/qKFDYzuKu05eKUrT30qbH1mspzCjSbo12LkWX
JgJvfllH4fCwj3G3S0qQj/+hTi0NCt/UCN6+2b4YGX6+/bZIj8K7HU7bRaUU
oAea9yMEL1BYTlFHTtynAEn1S9X8tKbw32bxGv/TBaj+0cbAIhsKp+6q0nTj
K0BzXqteuNpRWFFsN/fxk/no9gbp4VwHCgsmrX0m8PcremYiu/+7B4XftvYG
/PTORbsrrR7Lv6Bwyy2JVy8356I469gPYZEUFpHbn2TUnYPk+cIjlkZR2Nny
fW0G5KCb6QsD/a8pvK/3sqTfbBZqfCRm+iiOwgOjv16rXM9Abld3Gdl/prBM
kHxyh1wG8ig675qbTGHDTUb5IRUs1JYkfk0klcKsG8m9syosVGPOLHuXRmFf
jqPKt940dFFKSwtnUViFezbFzjwV/eq0LXtYSGGLGJXCNYKp6CV9ojWtiMIh
euYNdawUZJtEz+oppvDsg2zOVokU9Pv1PFuzjMLflt3dLlTzGZ3E9yrzKinc
pLL0sVlAIvqrZyX4XyOFzxjJpLZaxSIxb9oJxX4KD0/80XEqiEEuwurmggMU
vhVehUQUYtAyWvyuYeLIVs9vu/reoIetTsz4QfK9v9UWHq2JQg9LdgotG6Uw
c9KeGmgJRUcFJ1g2kxSu1JHfIB35BOmJNWUp/6Hw6J06XYMzIejkut6XP4lN
VzjG2qJAFOirtnh+msLHtopwLym9j/J4fDW2zVLY47vSd+l8fWSmeczcZ5HC
qsvbL/Ot14CYFQEHlLgYuGHc85UoxxTEfbtWFhG7P9lXZqdxHZK0n+r9XcLA
+fK+D1+KesJQQ7TQEV4G9g6nX9d67A0DNvw/W4j3CWWb1ix7CPEWojE2fAxc
Mj2qzMf/CJqcmpg3/2FgGxuVi2kLITD7skzl4VIGPkB3OeW1PRT2nG35zSvA
wErt+QaGt8JA2VwhwoN40PiM1uDMU/Dl2nbzP0EGtt8RtFTuTyRMuq95oSPE
wPozbXODm6PAdmvW4ThitVTl8XSHV9AjvqVZVJiBOaHsYSXOa/hHPsKvkzhD
0L0+zykGfDbN7LVazsCv14vXMemxkJAd71NE/MCQWR1ZFQt36oT3rxVl4OPh
Pd+clePg8bOvmmzirRm3S60a4sDv8qyNrhgD09skiw293kGCYMaqYOIx2pE8
lfb3MNAS2aW5goEb9fqQpF886O9JWLxPnGvjkcOr9QHchqSe1xL7J6SyOoI+
Qtch9s4LKxlYUUeWGaKXCIMrlE5cWsXAQqfTP90dT4SPDqsNYokn7hh9sI9i
gqO7XF4bsWV3njF1KwlS1fWl94kz8PeJwJpntUkQfsaGy4V4P98ZQ1Hlz2Cs
ctPyLbGa0rT+fP1nuHnvWvAscbROQfkN1WQQe7X3PE2CgcUPBx8e9EyGNu+/
CXuJfU5blFk2J0NAjL+jDfHclXUHGzekQGLi2JcHxNfucor1H6RAdKSCQwxx
d1DhvoK2FHgTpxCfQ2wSHVKouzkVcg8Mn6onLk05q/fZNxW6djk9HCTeVqia
v7YrFfKfZKvNEyc1zOyK0vwCfz1zDYUlGZgaKMKrAr7AZLjLyL/E4TNPwL/n
Cww8+8GrSCy47FzuEt00GI7gfqpGfFtGbbtrUBr09FTGaBCPrf+bNdqXBj7C
+9dpE1+AEl3r7elgPWS7Xoe4yTAso/VJOjSGqX/QIj58/ry28WA6CNhGv9lM
nHtjQ3rJThbMLaatXE+sfn9uCzxlgeuOa1wM4rfhpalfRlggvr/MZjXx6vfh
m1X1MmCHR/FBQeJHGVbJ0c8zgP7kYtwMqW+xbOMmqfEMyLN7d7uP2KFtnhm4
PxO6tP2qqon7RsrU/onKhOX2yyNZxGaLTxNuTWZCTIZWz0viclFr1YlDWZC1
mvetB/FOuvrHS2+yQCvfiW1JnLJ5UblrOguytzyO2EH83OTZ2orYbNBNyXT+
Tf63iO3FuD1/s2EXX93LEuJ7bpsVMo1ywDbhOUQS20ZW0N8t5ICB/Z6JrcSt
Cc/fyJ7IhalOFb6lxAbIRj70Yy6EWlUG15D7t6V7idw9UwTH1M2kzxCrZZ4c
3xiPINDhpyFFrBiSUNA1g0DK6tnxfnK/l735tOW1PobyQ7ZFtsRzhqZti6MY
5v5uO25E+oGzjafopORX6KL0/vIRTyolMpnwFeoEgq6zSH8Nc/F6nQ36Cj9N
hIokiNuTmMpoUx5cnNgum0H6tyXy1ErJU3kQ+U5U6zRxgw/f/FXPPBgoMVsz
L8LAlZbm1XJ1eWD7085cmzhXlN/ljmM+VJae9wwl8+PVdYuC7ekF4JPVHNJD
5lPkaYHEsM4CkDCqf2pFHHEg9ekIfyHwPKy2Y/MzcJC8oN1L00L4wfPLo4HM
N4/qL2LzM4XADpm2jCPz8NxG4bPZ24rhgL8mdzuZtxYyrAOrrItBrNtmTof4
1FIrdfuAYuiyPF4UukBh4y4Wn0xHMawLDy3dM0/2ddCFT+53S6Bj1ZbAh2R+
U2NZM7p5pSDgmkrFkX1wq2KP9+RIKdhe1b5aNUHhhg/fRBKlymBw/svaqd8U
9rNupWj/lYHO5d/9W8cpPNYyq88v/w02rq569X6EwrmFOtF1t8tBJ2mUi7+P
wqtjvqoGxJeD7BLPvfy9FHbwOJi+r74c/qE8Znl/UFhhq1l5hmoF9D2ip3HY
FH6U5Dr1qrUCXNsbnL+2k3pepB+y16mCWP2wLU3fyT5zhXoF6yrocTcIYNaR
/W9SfLYzqApe6Sud9K6l8FfRRkfjgSoYf5e6S7Gawqv2uB+NPFwNH9PvOB3+
RmF31nM3z9lq0I1ad0P6K4UPxjRXGJjWQu6fa8zaD6Se+4kXC6/UwiaZHuez
8RSOsPVa3OpVC+4jauU/35H8sH79JuXEWpCZ75KfjqWwD8sjlIe3DpKuMZ0n
Sf4oqVhrzmLWge+/xZNuIRTez3EaoPHXA6NAxeCzC9mvLYfuRcjUg9BakB5z
IvkqZ82/y9XrYTW/oruqI4X7PEsPz52uh4sx/06+vE7hB8KyzIbkevBwc62y
ukThInqBk79FAzh1RRxzP0XhvforeP58aYR3NI+WFl2S784JjM+UNkKhTVzL
L22SJ5y4OhfaG8Elyj+fW4vCl6NGM5f+0wSxSMeQvpmc/1XmIGPSBBNjuWYH
SN5rCvbq3jPVBCattcYbpcn5hsmvIZot0B0RLPbfDB0Hnm302JjeBq/LWdOI
SccPhrdBX3kbCDNVK6UT6PiOW/T8i+42WNYmuN3pA8m3T67c5BdpB7NPK3vl
Sf41KOZx7LjQDtuM863Nn9OxyIaNNo9WdED1FmR9xpuOHy/46A9c6YTA7sv6
T03ouNhAVthwBRvEWTk/fk/Q8Co1toSDDBvcppZvHB2jYUvht/KhimzIP692
o3+Ehme/qWo06bJhQ10zu66fhlUPbjO3tGJDRZSubWgrDQftMY+/nsoGr0Wl
46l5NHxK+9neYJNuWMk65ftfIA2P0MTv1D7vIftbeWKMTsNOjuvOBUr0wViO
cXqgljxubBM1vlgyACemmImlanLY0m1bP/+RIRBfdu7xtRZpnL9Oyy+fbxSO
lVWOuUtKYUWB7IHYA2NwTl9sqFVfAstm2+3l8xkHe10vbSWrlZhrljveofs3
lBXaxeXwi+JpoxyLQoVJUPOUKDxyQwC3apyVVvD+A0M/f0dpDi/B10+KitHb
psApTXKEOjSJpEJ/mPLKcsA070SLdlgd0vZaI+FI50C2/Sczj7u1yMThVF3P
Wg50TVRtOHqpBoUYVuvnq3MgqTZ1bNy5EgkJZ+/2PMCB6tD7j86lFKKF+09U
uRw5wLW6Wb3p0yv0w2U311wZB75f4rYePVEN3Da3c+yqORAxpTjH710D8ias
m631HBhgVA6FpNTCGQ21P5ldHBASv/f6smQ9NIxJDbpNcYBhayOjP9UMpZfG
66ZpM7BQ4nLcaE83/A/+oIpR
          "]]}, Annotation[#, "Charting`Private`Tag$7075#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
D43WMWoiNNERlXvMkov/BzJLfAE=
          "]]}, Annotation[#, "Charting`Private`Tag$7075#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2, 2}, {-14.523980701472397`, 5.570704135795319}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{
           TagBox["x", HoldForm], " ", 
           RowBox[{"sin", "(", 
             TagBox["x", HoldForm], ")"}]}], "+", 
         RowBox[{"4", " ", 
           RowBox[{"sin", "(", 
             TagBox["x", HoldForm], ")"}]}], "-", 
         RowBox[{"14", " ", 
           RowBox[{"cos", "(", 
             TagBox["x", HoldForm], ")"}]}], "+", 
         RowBox[{
           RowBox[{"cos", "(", 
             TagBox["x", HoldForm], ")"}], " ", 
           RowBox[{"log", "(", 
             RowBox[{"cos", "(", 
               TagBox["x", HoldForm], ")"}], ")"}]}]}], 
       RowBox[{
         RowBox[{
           TagBox["x", HoldForm], " ", 
           RowBox[{"sin", "(", 
             TagBox["x", HoldForm], ")"}]}], "-", 
         RowBox[{"sin", "(", 
           TagBox["x", HoldForm], ")"}], "-", 
         RowBox[{"10", " ", 
           RowBox[{"cos", "(", 
             TagBox["x", HoldForm], ")"}]}], "+", 
         RowBox[{
           RowBox[{"cos", "(", 
             TagBox["x", HoldForm], ")"}], " ", 
           RowBox[{"log", "(", 
             RowBox[{"cos", "(", 
               TagBox["x", HoldForm], ")"}], ")"}]}]}], 
       RowBox[{
         RowBox[{
           TagBox["x", HoldForm], " ", 
           RowBox[{"sin", "(", 
             TagBox["x", HoldForm], ")"}]}], "+", 
         RowBox[{"3", " ", 
           RowBox[{"sin", "(", 
             TagBox["x", HoldForm], ")"}]}], "+", 
         RowBox[{"2", " ", 
           RowBox[{"cos", "(", 
             TagBox["x", HoldForm], ")"}]}], "+", 
         RowBox[{
           RowBox[{"cos", "(", 
             TagBox["x", HoldForm], ")"}], " ", 
           RowBox[{"log", "(", 
             RowBox[{"cos", "(", 
               TagBox["x", HoldForm], ")"}], ")"}]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8415490494004354`*^9, 3.841549082782611*^9, {3.8415491331612988`*^9, 
   3.841549149873321*^9}, 3.8415493677553487`*^9, 3.841550232714715*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"83ae7c19-df0e-4cb1-b66b-1e7e3d14f516"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Q3 Solve the following second order ordinary differential equation \
",
  FontSize->18],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "y"}], 
      SuperscriptBox["dx", "2"]], "-", " ", 
     RowBox[{"6", 
      FractionBox["dy", "dx"]}], "+", " ", 
     RowBox[{"9", "y"}]}], " ", "=", " ", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "92443042-4777-4e08-be6d-0eea0f40c4e7"]
}], "Subsection",
 CellChangeTimes->{{3.8415474662984734`*^9, 3.8415475369498286`*^9}, {
  3.8415486180203023`*^9, 3.8415486225756445`*^9}, {3.8459391876070404`*^9, 
  3.845939188555458*^9}, {3.8459392899583836`*^9, 3.845939376309356*^9}, {
  3.8459395950222054`*^9, 3.845939599235855*^9}, {3.845939747404271*^9, 
  3.8459397474932704`*^9}},ExpressionUUID->"866b4dca-81ae-4de7-9446-\
87f6ce6b1c28"],

Cell[TextData[StyleBox["1. Solve y'' (x) - 6y\[CloseCurlyQuote](x)+9y=0",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8415475383917856`*^9, 3.8415475804938183`*^9}, {
   3.841548664782364*^9, 3.8415486675286756`*^9}, 3.8459393401664762`*^9, {
   3.8459396015393133`*^9, 
   3.8459396069079475`*^9}},ExpressionUUID->"81c0b41e-70b7-46e7-ac0f-\
243c125dba8f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq3", "=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], " ", "-", " ", 
     RowBox[{"6", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], " ", "+", " ", 
     RowBox[{"9", 
      RowBox[{"y", "[", "x", "]"}]}]}], " ", "==", " ", "0"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.8415480019619675`*^9, 3.8415480084923086`*^9}, {
  3.841548050653679*^9, 3.8415480527221885`*^9}, {3.845939614524598*^9, 
  3.8459396290362453`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"f314d65a-7646-4fd6-99fa-e1c5f323657e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"9", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "-", 
   RowBox[{"6", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.8415480152237024`*^9, 3.8415480531318903`*^9, 3.8415502081590767`*^9, {
   3.845939621492179*^9, 3.8459396297292767`*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"85bec810-adb7-494c-b236-e7d100fdb014"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GS3", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eq3", ",", " ", 
    RowBox[{"y", "[", "x", "]"}], ",", " ", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.841547583572585*^9, 3.8415476177826166`*^9}, 
   3.841547668165934*^9, 3.8415478585025377`*^9, {3.841547999263719*^9, 
   3.841548013294275*^9}, {3.8459396321173563`*^9, 3.845939636706153*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"aeb610b4-2878-472a-8e8f-1db465616c83"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "x"}]], " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "x"}]], " ", "x", " ", 
      TemplateBox[{"2"},
       "C"]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.841547624411706*^9, 3.841547668910844*^9, {3.841547859724581*^9, 
   3.841547884510466*^9}, 3.8415480169865503`*^9, 3.8415480550426908`*^9, 
   3.8415502090000687`*^9, {3.845939623771781*^9, 3.845939637564933*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"f417cc88-73b9-4156-891d-4fbb0e592563"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.841548488067194*^9, 
  3.84154861073958*^9},ExpressionUUID->"2e33ede0-1251-4683-b79b-bdda3ef4114f"],

Cell[TextData[StyleBox["2. Solve the above differential equation using the \
initial conditions given as\[LineSeparator]y(0)= 1 and \
y\[CloseCurlyQuote](0)= 1",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8415475383917856`*^9, 3.8415475804938183`*^9}, {
  3.841547714855311*^9, 3.8415477707922544`*^9}, {3.841548482559997*^9, 
  3.841548485734109*^9}, {3.841548913320019*^9, 3.841548914903326*^9}, {
  3.845939657696336*^9, 
  3.8459396578243637`*^9}},ExpressionUUID->"fd46db45-716a-4706-be29-\
34bbe3485807"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PS3", " ", "=", " ", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/.", 
     RowBox[{"GS3", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"1"},
        "C"], "->", "1"}], ",", " ", 
      RowBox[{
       TemplateBox[{"2"},
        "C"], "->", "1"}]}], "}"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.8415477856974025`*^9, 3.8415477870195136`*^9}, {
  3.8415478537367554`*^9, 3.8415478554479136`*^9}, {3.8415478878958178`*^9, 
  3.841547898866685*^9}, {3.841547989161253*^9, 3.841548102696391*^9}, {
  3.841548133205283*^9, 3.8415481483402805`*^9}, {3.8459396606219645`*^9, 
  3.8459396607461033`*^9}, {3.8459396996063137`*^9, 3.845939702406128*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"122a236a-9ef5-4ab0-95ad-ee4919c7ef9d"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"3", " ", "x"}]], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"3", " ", "x"}]], " ", "x"}]}]], "Output",
 CellChangeTimes->{{3.8415481177557387`*^9, 3.8415481491507483`*^9}, 
   3.8415502122246904`*^9, 3.8459396618256598`*^9, 3.8459397031484013`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"6e2e76cf-9e04-42ce-bdd8-96e1776abcdb"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.8415484903975644`*^9, 
  3.8415486138123183`*^9},ExpressionUUID->"8e55ebc0-ff27-4695-b65b-\
96c96d94f19c"],

Cell[TextData[StyleBox["3. Solve the above differential equation using the \
initial conditions given as\[LineSeparator]y(0)= 1, 2, -1 and y\
\[CloseCurlyQuote](0)= 1, 2, -1 and plot the graphs",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8415475383917856`*^9, 3.8415475804938183`*^9}, {
  3.841547714855311*^9, 3.8415477707922544`*^9}, {3.8415482741162243`*^9, 
  3.8415483208190427`*^9}, {3.8415484680690794`*^9, 3.8415484798078566`*^9}, {
  3.841548918259204*^9, 3.8415489223133554`*^9}, {3.8415495530347576`*^9, 
  3.8415495539412537`*^9}, {3.845939678711643*^9, 
  3.845939684915474*^9}},ExpressionUUID->"30c06493-1157-47cb-adbd-\
f96d6ef2a8c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PSX3", " ", "=", " ", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/.", 
     RowBox[{"GS3", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"1"},
        "C"], "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "2", ",", " ", 
         RowBox[{"-", "1"}]}], "}"}]}], ",", " ", 
      RowBox[{
       TemplateBox[{"2"},
        "C"], "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "2", ",", " ", 
         RowBox[{"-", "1"}]}], "}"}]}]}], "}"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.841548309335477*^9, 3.8415483410444107`*^9}, {
  3.8459396894843807`*^9, 3.8459397098550878`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"91384ffa-4ab9-4ee5-8cd6-d2922698b1ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"3", " ", "x"}]], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"3", " ", "x"}]], " ", "x"}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"3", " ", "x"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"3", " ", "x"}]], " ", "x"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"3", " ", "x"}]]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"3", " ", "x"}]], " ", "x"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.841548344767888*^9, 3.8415502153895435`*^9, {3.845939693379458*^9, 
   3.8459397104665995`*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"f986eb63-d7ee-4721-a513-8adb9ead6136"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"PSX3", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", "Thick"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Green", ",", " ", "Thick"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Thick"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "PSX3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8415483620828695`*^9, 3.8415484173204575`*^9}, {
  3.841548563227775*^9, 3.8415485885494246`*^9}, {3.8459397131271687`*^9, 
  3.845939717588561*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"0fc964a8-09bb-4988-b6cb-04e1822d9fbe"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwVlHc8l98bxu2VZCVUKJFVpEXiPEURkhWyVxkh28fKyEpCKjuryPqiyAr3
oyJJysree6/Px6af3z/PeV2v9+tcz33f55zrhPkjzfsUZGRk/Puf/68WhdGL
//7R4o9qpAkrYhLAvs0tKLNDiz+mSeFlwCTg281MQ/cNWnxKvcLqspYECA5U
/JhbosW/We5ebPOUgBnG0bfdw7R4lUaHJmuDBDjaXtQr/kqL/0kw4PhqfQ4e
C/TgD0Jp8cgJnYS4z5Ig7mS5nv6EFucnHPV90SIJQ1ULZ/r9aPGFSzIH3k1K
wnVtyiQtAi2ual71nI39PFA/EXPDbGhx7ldylLwO5yFi6LEwtwotXlREVrkn
eAESk/hjfjHR4tbrzrEp+RchVyIhvYyBFp/IP/6VouEiVNYxfUinocW5+k8s
hY5ehJ7Fzd9uezT4zXOaAyTuS8Ct8OcgzwINXmQDnJbPLkHSnM9Th180eJc/
33iu82VIlv3rfyiCBn9XwCu+ZCAN+a0q0ZuhNLhajp9Sjbc0VFnVpo4+ocE/
9qujj0nS0Pciv6bMmwZvtXpsy9gnDccnAndMHtLgIVLV8pHGVyAlUpxQpEyD
HzW9ODpnKwOpg2GPNOhp8LgIww8KGbJgeoDutz81Da5MFE0u+CYLJy+Hni0i
p8G/b0gryk3KQlZk8DzTFjWuw33K9beYHBTIBj5smqHG0b8rytUVclCV5G2l
2ESNc0dd1pzqQdCj62AiG0WNH/P7l1d//BokP5mvsXtGjRe3Erl8z10D40I7
nuRQavzjAdZ+pRvXYITmYf+WHzX+U9j0E5/9NZj+ZGVQ7kiNj0RMrbZVX4MN
NjPd85rU+IzxMK2BxXXg+KN1R/gwNf6B901uAMgDV/Ppzocs1HiYqK5HYoc8
HGvaNi44SI1/Prxs0DgrDyca3jqcp6HGwz+11j7iVAAxfPW57DoV7n61TqfN
WQGuF71s0uimwh+sXg9lFrsBj6Lbbnm9ocL/ThYu7BTdBOfI9y1VCVS4qsuP
lZONN8E1wvvev9dUuKDmnxbz0ZvgFcZvExRJhfftpvtIcChCiL9LWKQfFT50
X5SRxlcRkh3ZvmeYUeEz8fZuBXeUoEFdS+GnABXOGn1eKpFeGUTiWTOrTlDh
XWPjx2KFlCFisIW64DgVPrW4sFisqAzqDurfow9T4TbbpQN3Q5Sh69ltZR1q
KvzDgSzNS9QqMFWvqD48RolrHrjxIJheFehkrxquv6XE3VitDsmdUQPboO2q
qVRK3KF5p+WTuho0/aw83pNEidPkFUVquapBtL70YNVLSnyE/os3eZUacBIu
mQc+ocQ7Yl82idy+A0LFEtYHLSjxlxQq96xl1EFJWMCV/yQlfoGGJVXUVQMM
aRdO6fNQ4ucbp/0PhmqA43hpRzQ3Ja7YWl5HnqgBcelKl/dYKXE+qudFJ3AN
mOCy2+qipMTtXRdeYwc1IYih2D9ynAIfXC3Zo8nThNpZ7PlmNgWuzHMti4uk
Be0/6OUkMinwCmYLPQsGbZh637rwIJ0C582rPV/Lqw3Mlpbq7QkUeF6rdGqF
sjaY9oWyFYZT4F/enexKSdeGvabmBEs7ClxppUBRUesuXCkwzPotToFzPbfz
cqnXgf86mCU+iVLgDv8yHEyGdIBv91tF4ul9zXtU8P6WDtConvl1n5cCdzMZ
F6g5qwut07ur20wUeLnItl52vC7YCqReE1ogx6nCLpLsnPQgMXm4zz+fHA81
8LWQuKwPW+EP2CSFyXF/zv4P2BFjKAh6VCciQI7vHr/QEXbZGMwfEzz4T5Dj
dTuMZfO6xtDoFN7LzkWOZ/7HP3MwwRgS9QrertOR4628HC45x0xAWnDtfPUU
GV6iyL2Qx24KhNpgbaVsMnzuk/Q/RzEzIK2/e218mgzvrHiZovvUAvTDyuKS
+clwKi9evvEkC8A5GxN6eMnwXQEyJv8CC4iQXnyjw0mGd/y7LDnQZgEnvaWz
1OjJ8G4/60IZXktI20my9/37D1pveODe5ZagS79QKGv8D9LCz31hJN2Hbydj
LtTY78H9xYD2xdfWIEPtVyxquQNdV2dO9y06wCvs8uVrvlvwX7zTZ+8SZ6Cs
X+z/6bYFEwZPyHVrncFZJTtIx2ELkvNFIs81O4OGDlfrQ5MtoLhSeHBs0hmY
7LbtYq9tQVeaRKzMURcIi4OMWeotaG7r1EwKcAGfBUWm2MhNCLmxMISpusKs
C9knvtBNMDSPoWrUcwX9zXKDPL9NYKVOeaB23xWkqURycMdNEFx8fVvpsSus
cTEqzGpuwkYTZrVT6AqON/54Ykc2gbH0ecB1VjewSNYbn0ndgBFeDTuOFjeI
LpmUbYvbABEpdfuP/W5Q0+Qe+zlqAzgiTJWuz7gB9+4rxQi/Ddjy0XhyldId
/hi15Jwx2YBIjcB3Ly+4gxyvsoMjzwZUmXvSRr1yB7vL3fV6HBswIPGcRynN
HRLvWPNeY9rf36Ibv5TnDiS/kD8se+uw9/ShD9NXd8gf+iJZ3L8OMxMad92W
3IErQ2adlLwOyT2SvO8VPeBmZeOdgVfrIJdy+ZKEpge4tt7Lro9Yh1a/CZe3
hh7wh4JwL85nHZgl69duOnlAiEXJZynDdRjJvLXskeABxFNn/L2PrsPUgM6j
M+MecFK2qsuCbR1EZAb0xBY8QP2uyjnVA+tAw+inemjdA/KCbUaOba/BTJJq
jh8dAcwnMhVqetaAwEZmsSdMgN/veejJE9eAlYvpM4sVAUzncXLXmDUYCZKs
zbQnwIqkxdZE+Bqk0XjdOOpKAPaa97NN3mvwBRilcvwJoNcu0RxvtAbf1ILT
b8QTYJqrrf6Azr7fJ3LvnjcE8DJxg8dqaxAuP5V4+y0B3sxUFFmi/XrQHtmv
/wgwQib/UuLEGkwdT/Q4VUsAl5vjz95yrUETB1Nyah0BqCJCgzhY9+uVzH5F
+kGA00ea3HYo1iDMjPqyRCsByg0dHB5tk4DYXrjB9pcAyhnMViOrJMCtVGr+
dBPA7sxdvYYxEmwcOefVNkSAXed1dZl+ErCPmvlzjhEgsjzhVkEHCZSUb+de
mCQA357M9RPNJKgi0/U9PUOAD/IDV17Vk8B0qct3aY4A15/6n6cFEmjLnRCP
WiRAe/NJMa8yEoypOLJRrhBg7Z7VcdNsEvTJtxGs1wgQmkrP0ZZGguRV5k29
DQJwjucx3Uwggfrfd7nHtgiQK6JGW/GCBIwMdgzF2wSQcVz6JxpOgp0M4VdH
dwnQ9ClmIyWQBPkxQV/u7hHAePvCMov3Pn9GfcjsHwEWsc7pIJd9PcK+cpXM
E/xDPEfWH5JAymZjZGpfszQd7bW1JIHQzRZdS3JPyGCpaes33Pf7mVBXsK8v
6Jo2qd8lwdxN/rTv+7oumaLu620SkP1i0/8/1xl5V33p5v68qMYszff11GnF
0hw5EihM9UmM7vt72k8XHLu8P6+Iw2ck9jVD8bP3UeIkaOpy/K60X1/Sxpk0
CiEStGNJdmL79YvJ/Yl34yOBnTddWM8OAWqeOL+Y4iQBJrn8RHO//zs/2MMN
WEiwVKD+4+UmAYaYygKb6UnQ8GQE3qwTwFn7nvc1iv35S/A1PyIRgDJx26Vk
iwh/auXu0a8S4NXgG7vTq0TAHonV2SwRQEAAu584S4T4c5Gu0fMEKLUdMTo4
ts91qxt89s9XqShIx7+PCGlsdSfO7p9/N0nwzmo7ESQYTAfejhLAVuaH4oNf
RLjaQTLoHyTAjv9DrLuOCAph8WvdvQTgYSw6B6VEIF6LmeNqI4DDmFBfVAER
koMuiKz+2u+vKj3ENIsIJbq6lQENBDCyf9lLHrvvP2Rr87mKAPk3GENanxOh
4b3Yb8vSff/jwRJvg4mgp0h/GC8kQHKze7CCGxEYDxyvCEsnwFzWovhheyJI
2RuqERP274ufdc+4JRG+0cM5phgC9Ijri4dqE0FosuTKrQACcL2Q7f5xfr8+
i23FLwYEsLYpfZIoSgT2V4fuhGjsv59r4mcf8hMB135+fPnm/nte4XvCyEaE
Y+Vjp8okCBCrRXXmzsoqKOw8Xpj65wETor6dvDOrQKyz0fi+4gGXqNYCloZX
4SqjuK3Cfh51lEz+fdGyCslnjZ5y/PAAdo6f/u1Fq9DQ7BW188wDLBfkRTOz
V4FO3/XLR28PKKmv6nBLWwVMeoL6n60HaHkUiByJXoU0wVeyd5U8IKbrRfu9
R6sgdXnRpGvXHUaKGPxErFZBPTfmCO+MO5x7+kR423gVukQWk1c69vNc2u1x
stoqOAq8kJPJd4dDSXpCg2dWQW+kN0xCyx2MXVpaCwVWwTWk/eFnGXcoUFH2
9T++389ZFckf/O6gtiPTeuLgKjAXRGHWK24QYcTrYzm3Aq6rou+inroBA9/E
7+ncFZj7HcOqneIKfcl0P4cyVoDzqOohSj9X+I9LtL4zcQUYm6i0T5m4gjqb
Y1Vd+ApkHzLhLT/uCrE0W9nptivQ4PdzZ+elC1g/OfYu3nwFyBLGIzgcXUCa
DKVG6a8ANjo7E6viAn2bT177Kq/AFF8CVz2ZC5ycPxh4T2QF+CQbm4stnIFo
I+GrfnIFhrjEnbqvOEPdhCZBkXsFlmg90u6xOIP1UJzDRYYVwPNcFS2qnKCg
7YQBy8wySMQMWTkwOIFM5cULP3KWYemMg00f/SNgvKwnjqcvwxDmxDqf7gAD
xV4iZQnL4HiK5quPlAME/gd8mU+XgTl5o5LBzB4a0m4dDLBZBnVRm0HP1Ieg
HWo0ISW8DEWmXaaazVYgSOU/LH5iGfhCPGOjVa1g3T+jT5Br/39Nf24z/3gA
iV6Trez0yxDNNfzta9V9GLJ3gqWpJUg7HhUZHGkBdtrB8dnZS8BnufDUoNAI
0vcqz4ukL8HQmYTQ/GBD+Ju91JyXsAT+14588dYzAGzXgLowfJ/HfX/pvqoH
7FmSzp/s9nnZBwaaPS2oXh9U+SKxBJjMtJNs9XVYST88KS+8z1VTqRLHEJxW
VQmsO7Gvp4TDPshdgRdppeUNrEtAtmZ/MzDoDPyM4VZJmV4EMlMztt+bJ9Cx
S257ZU77OnPUvbb7NgoJH7rw2XwR0twrfyTEqqOlAZWHNVqLYHroSveYgib6
Fnqy69vFRcCTWIx0C+8i++7fH1o2F8B//lNMTZUhqvERuT8bsABpX7OCRYfv
I9Ovgz95Yuah/GXvzTxHF6Qou3G/P2Ae/B+8pkEsruhsGTNZstM8cHrdlI0u
dkU7udcucGns85a6AK9dNxQf8zaZjXkeHDUPXunLIqA/Zlb2dJFzMDXBf8xI
6zEq6/Wj/e47B8ypM8zZLH4o5W58erD9HAxNyI8vt/ghu1s/Oihuz0FJwU77
rXx/RHdOVG73wByo36HZvYEC0TWyRaaVp7MQLT07+j4+GAl50eYUec5CWibd
dBtdCGIm8so/spkFoaoT5qe8QtDApLrHnNIsSAXtvrpqGoq8fn8cnKDd13x+
GtFXnqKPKe5FvcEzwIf9UqQTeY5Oyu5p1AVMQ1OpfVMx5Uv0h0VWLMF5Gtpf
UH/xV3mJHk9409hbTEP0DaO+1ZcvUU/UZiX7jWnIviua3iL4Cr0cIfJb0k2D
+uRMb5T2a0QVNkuiiJoCrGnS+3pLHPpoKPLnr98UNPHGvmc+FY9Mz9nk5jpO
QcnjK3GJHvGoqmfCWFNzCqjmiwMm+RKQ25mR7+mHp0D7xHGNSJ9ENNHalYAl
TwL+Dz9ocu8NevX+iCv780mg+n72QVL5G3TdR0dtynefvzYry+NMQSkC7RTR
JpOwxAsf1XpTkC7h98PBk5OQYfu69/7FNNRwvF72cc4EpLiqBzP2pKMc6+Lh
z6XjIJh9Azv7OBO1m6fyqmSNQ+vuYPR6bSYiM3pm1PN6HDj6mbhNaLKQjoZF
94brOATq2JEOvshCFFfYWi6eH4ezPBGXDhW8R/oHXPDCwrH9fItz/Umbi4Kp
TfbkUsdgb4he+ohOLir6p3y1OXIMJjqd+zgycxEN8WT5nP0YxOpShF6+kYc+
9rUWCovt8wOlHqcj8xFDgWTq2+xRMLZ8/YJNoRBdzObpl4wfhQJWeYJ6SiEy
zWA4+iV0FK7TUL+/t1mISmNHYocejIKrfHfhrF4RMveLiTwuMAqWd3cwXY4P
qFJ9xTcufQTmsQdH32V+RLarHwyfJQ6Dsfij1ybHSlHCpWUZq/BhmK25YD+g
U4oaPCWOynsNQ+7I6/HeF6VIgKywe+veMMxrPk7ToS9DQ4z5OrZcw1Ds3PPv
wV4ZuiuYpX4rfgiin1u97CSvREE24+ICYUPgdfzqswqFSvQx/9QhcsIQhAv6
poqEVSLm829/lesOgdlAnn8N82f0E6UpCx0ZAiuF++pNQlUo4OOFp0xig0BX
pWTo71aDBqSKFesPDEIkUwlrX20NugrnaB7PDoBcYpRVNxOgtZ9nn8znDkCO
U2Z3dS4gu3Eh3ybhAQiMi7AXcsORHudxp/DT/bCUW+I0+K0WnX1MfY+Gvxeo
vIJZk3O+Ie7KP3FTVL2Qrvz+fkfnN0S9lvS3caIH8iNui1vT1KE+e0ntqNwe
ENnty0m2rEPhRiZ3OCV7gKkwj1VLoB5NXq24IXKtGwyHbejDyr+jVkJQECN/
Nyx5RnlnzX1HNSV3vi5QdYO558Kq0IkGFCs2gRU3dMFKXMhXw2cNSOEY29Wr
6l1QwpxX+tLyB0rbtpNUM+kEvP9d2bDITxRxWcpJ4lonxMQ2kcfd/4k8XCiL
WPk7IeVhM0tV2k+kNptwpnPiLyzzzabqcTah3Z56IVOHv/ApYTFkmfEX0q/k
43X27YDgG+NPdRl/IzbP9gOxSW2Q5n8naLWkBW3822RZ9GqDeN8Bz6v9LWgg
hJdTSb8NWujTLDupW1H2K9tTW5xtoPv77XNqvVYkV0QmaxzbCjFJ3vHaZG3I
ZlLMQfBFC7QntJeomrUjNQdNVz/HFtC3iiCRRbWjCyQPr647LVBveDiQpbod
7VF8DQlnaoGp3FA5Ze4O9IrnXurCsz8wJ3P755nuDvQ4jyHd/uBvUHSrzjKy
6US3Ku7+x9vUDPcv/W4SfdOJ2L+nVbSEN8MPbdRh1tKJckYutV6ka4afadwZ
dDJdqJ3LgnKP4hfIPGY/qMvWjUTCPt+P3GiEaNGG5dyuHtRpaSdSOFoPFiEy
UceqBlBNv/rl0qx6MOj4/fTw1gDK0rmoUG1TD78ci6gCpAaRq9Ke0c/FOvAS
Vkz7WDqImMWiX0xuf4P1LnFjFcMhdGu1eIOX/SvsXf5cHmEzjNwo15+feFoD
i80StsElo0iBBO/FD9WA6eATZq/eUcQ6GVYr+7oaZiR/jn+iGEMFjdyke+lV
cI6fm4lacwxNvJAzjKmohL+sVNyHiGNIjy9EhHKmFMoHuijkb04gDy+RyB+v
C8Dm67Vjg4LTSG1h6W9h1n8gd16A6ZvONBI0L+ONLcsHlt6M+d2QadRxS+GD
eXcuDIRUlzpPTaPzXMbt28feg7z6oINj4QwaeMR/0VApFWgOvAtAanPoTz7P
oLamDnxz7fcmtC0iKjMVvjB5OcRTGB8VQ7uEcs5meDBWmqOCK3FqbwSWUH+3
TWG6GgH1b/9y1zBfQh6Ft1XmOJ+hL3P/IbmBJaSQiBJYHicjJeL0Ea+hZZQb
JYW9k/gP8XGKfDvOQkRU31KraC8UoC77gQAzaSIy2aCRfni5EFnf5jBdNiOi
8KIZTq7UIvTVhD9nvZiI5LgqWIb2c2yQXaHlPwMSypq5S+lQXIo69361ylWu
obagp7W8F8uQcwHnf6GTa4iMt9qvpbQM9cue/C5weB3pa53auVBZjsZnLwpa
Oq2jQ1UrxG28Eonbkmq2zmwgwvOoiafNNYifv9r2WPkmyjz99Z2M+n6uUHgK
UM1uotbaNfP5FkCVyqx3VHi2EMd2waNsWxwJdBZnbAVvIUdxjrkDDrWomzLX
c+neNhKIHxtrdf2KGAfD9P+y76JIm4C/poHfUazGwI8+ezIs7Cf5p7Ga70gk
/UFH2zMyLPBM4Evr7X0e/H54L4cM81gOVHd0bUDS5Tz6KxNkmKlnUKPfgx8I
o9jw0rMgx849Da1JUf6JvLS0Bh0fUGDt2c+z+lh/oyKhrbd28VRYMwNTsOmd
32gsIl8pvpoKa7CLtBh79hsVnkj9RzlKhRnHKzK7U/xB4vQXNN6cpca0DJV+
+Xr/QY0iwpajDdTY1bFbis/tW1DQynYKDwMtdpCoKpOv0YYOe4pbBH6hx5h7
JC08nNsQR0Efrz2RHmPHOZ9df9mGRHcOPi8RZMC4I8Z6utrb0HPyeg7DCAZM
6JSPF7VeOxKzZPDkMzyAXdfOqzA27kAD985NczAdxNxL6KVYHnai8f/aPUxM
mTHPxEWTvmedKGQ0O/yXHzPm498R+j6/E23wRSS6pTJjT1TTO2UXOpH2gzea
boPMWPSYlIetUxe685ClRM6cBctjty796tGNPhz6clrPhRUbcq2/4B7Ui4wb
2Xzr6tmxvgZq7ux3vWjVvI8zZp4d6zp241/3t160UmMe9Y79MPbn29cfstR9
KE+7YT3Z4jCGs9caU4f0obPtKprTVBxYasnnsFeh/SiyqqXL5O4RzJhY1Pcx
fBDVRy0OPjrHjekrLdWO5Q4iowuL7Gtm3NjdZPH3HD8HUdPWPbG2GG5M8GSn
VDX1EJr9123+isSN8TTepTxxcwiR839vlIejGBO3VvxU/RASoyzqHLI4ji1U
3P7i0TCMZu2bu+9482EC9N9dvTuHkcnBlqGYOD7MUA877TcxjALP7nZTlfBh
jWuSESFUI2iE82y7+zwflnmeU+c1NoJem8saJpmfwAz/G5n+WD6CmEN21kR1
TmKNaR4sC9mj6Mkpld+Flqcw8qWlr8tlo0hvDrd1CD2FSSFbd1L9KDLeveX1
IPcUltVv2LszNoqWROhtqZZPYQHc1zMPnBhDSVTEXvIAAUzqFaO0cMIYWq7y
9dTNF8SyQtNNLZ+Oo5CXf93OnRfGTD/YF+YnjCMfobgbPmbCGHev9B4xZxyx
8et+5YoWxiLPtiYFN44j67NOjHcWhDH3DorOrAMT6O21s+MfC0Swm/yWt6ef
T6AwCm+vUSSGTdQIXnGImURCq8EKstniWNrUSlhpxiQqCc2fpB8Rx/RZoXPv
4yT6ck4wh4dJAmu+r+sW1TaJRHwZs+aVJLBSxrCiIvYpZL2m2kdZK4GF6E8L
rsZOoWtdXX3mn89hAmt5bISkaSR9bJg9sfc8xlmncTIvdxr5nyXMyu2exxhe
rUsMVEwjKVZbw6O8F7Clc/JqCl3T6KF9nbuPxQWsyr4njPnwDGL4PB85vXAB
0x6n28uOnEHqBzxQLfMlLLD9/lR3wCyK4j799fATKczt7YF1xhezKMX/ELd1
vhRm7fyBGkubRbfs0rz3OqQwNebdk1k1s4gxtObIprA0xqX6ysh5exad+pU9
fa5DGiv6+qWVwW0OuZe9Wz4sLYMNfOStlrGeR+Xy5lPz0nLYLylnkZMe84hR
3+rWu4dyWFXNtzi6kHn0cSohLfeNHJbUaOPc8XYedcyeFcuhQJjeSPHpR4Pz
yJSKt2Y/JrAWFqWYDJ0F9PtDZyOxGsO+OTpa0d9YRGqLWZXt4dex4rUv7Yta
i+iL0uf0cznXsQyfw9f/mi8iSd/Pl+D7dSwgrPLYW/9F5LMonGJPLY/JpVG1
Xq1aRGeiqiZ4n8hjfVaqPOVcS0ht6QYLX5gCdjduKGw2eglJPX/k/7fyJhap
WHyQPGEJhYi9yWIZvYk1rAfHcKQvoQ2hY3ExBxSxK3qiydc+LKGGL59KrIwU
MR4u98K4liVUoSTFY0elhE0lHvgrz7qMGOl2xZVNb2FeKZf4k18uo0bvmHez
mqpYsRp99oekZeRAHKPvDFLF5vZ6xb6/XUZ0g0Scs0wVMzYJuLRSvIxSPsQ7
pR+7jcnzNd1Sal9GYociJLpmb2OMGWaORPYVdKJZh9os6Q6WkhlRrRq7gvy7
vD9lpGtgrkKqGZ1vVtCfu3zOATUa2K28A6HmmStIWy4gKbJXAyMWhasTSlZQ
Q7exwUUOTUylKmz0besKMvojW1H1XBPbaA2i32ZaRcbehUAK1sI0yHzv5oSu
IrntVsDe3MUEn1y9ciFqFRmo/O0Iwu9iO9Q7PBC7ikjae57kY3ex7APeU+2Z
qygv81JbpqgOtsfh6U32bRUppzh9eletg+WecUvXJSOiI0z1Tk1zuhiVgf08
tScRXQo+KWTnpY8dVdHhOx9ARObXXnMdy9HHJGWQlulTIlqI16I63qWPmR5l
qahMICI79tPLbJcNsOrekqBHlUS0F34wYnzDAHM33Dnavb3vn3xt73WEETZt
9Ew5/zEJBRupxQj5mGJkaq6+3SEkVOXyHedNMMU45YyKaKJIaEj1Gv2tUlPs
Jo84h1kqCRHoT6Pzy6ZYxkDr8GGchKgFhOGRjRlmaMLt6Ue+hnTK8O2/FuZY
s2nOe82gNTTCnBE5H2iJBfL7XSE9W0PEnX9W7u8ssYsT2r/iXq6hAX15hYv1
lljyQ7LVvow1FC7ab6TDcB976K4rZ1W7hp4KjL4Rf30fo4ug7vDeW0PWjXFG
EZ8eYNfLzCgyCeuISde+z4ffBlvzvPxa0X8d8bDb6nuo2mA5Vw8KzYSuo82z
bh+K3Www5i/lt8Xj1lGI5Y/nqw022GDToYSKT+vIx0wkIcnZFvMZqRZvXllH
x9jYVmdbH2KfDnIbrdttoB6hbsecRgdsQvRmqovrBuJ8k9FWue2AcSo7Dy96
b6CBOS0drjOPMJ+QxvtT4RvIoKI6CaIfYQr/vBy6szeQzFdcavCMI9a61Ov3
eWwD/cxwpfEkc8IW2t5k+BluItvGsMrBOmeMb+XH2LbFJhr2iRn4NOqMaTKv
CRIebiI6SbrfleQu2CdVtTxHr020LicqpSnngvnU7RWbxW8ikYEoKahwwRjK
TOrk2zeR9Y9vbW0Vrphg4okpWtUtlF92eIJp2B1LEPAgCGpvIUkzvfM2dB4Y
44cmuhuGW6ix44YOjYQHtvrdQzjQbgu1dCkMMvh7YDjpl+1OxBZK5qB3v8VP
wAw0vOaXfm0hxsSGRQoPTyyarm2l+842WnnItFqr44NRvhJ6sqG7jRKXLgWY
hPpg7ryP2Y6YbqPBc7Uud8p9MKNLwhe0HbfR2YzlQqGjvpiIpZ9bc/Q22toQ
6/895ovVgejGl5Zt5Ie0/jqE+WFb7kG7eVo7iPviImNYeADG0FE/jwx2UEiD
G194VgDGfZ5+oM18B1Uk/bEq/xKASS8+r9l22kEbax1ZidsBGMEqzk8legdh
1l5Rvo8CsfAnX+iJb3eQ+9Xf1Z7Vgdj/AC2dn1A=
          "]]}, Annotation[#, "Charting`Private`Tag$12907#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
NGdGdxp/TD3IUqJisILun/lT7l4egP8HSzbt9A==
          "]]}, Annotation[#, "Charting`Private`Tag$12907#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
9qW+vtiZbNfbvzFafgl+5B8PPBDqSv4HcHUrgw==
          "]]}, Annotation[#, "Charting`Private`Tag$12907#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3, 3}, {-360.762579212719, 599.6844440641714}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"3", " ", 
              TagBox["x", HoldForm]}]], " ", 
           TagBox["x", HoldForm]}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"3", " ", 
            TagBox["x", HoldForm]}]]}], 
       RowBox[{
         RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"3", " ", 
              TagBox["x", HoldForm]}]], " ", 
           TagBox["x", HoldForm]}], "+", 
         RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"3", " ", 
              TagBox["x", HoldForm]}]]}]}], 
       RowBox[{
         RowBox[{"-", 
           RowBox[{
             RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"3", " ", 
                  TagBox["x", HoldForm]}]]}], " ", 
             TagBox["x", HoldForm]}]}], "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"3", " ", 
            TagBox["x", HoldForm]}]]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.841548395414299*^9, 3.841548418480526*^9}, 
   3.8415485895555096`*^9, 3.8459397181716003`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"e8e21f01-2062-423c-a9c5-9e1f7522ddc6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Q4 Solve the following second order ordinary differential equation \
",
  FontSize->18],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "y"}], 
      SuperscriptBox["dx", "2"]], "+", " ", 
     RowBox[{"16", "y"}]}], " ", "=", " ", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1ca04467-dcbc-482f-aad4-6a386ff29f26"]
}], "Subsection",
 CellChangeTimes->{{3.8415474662984734`*^9, 3.8415475369498286`*^9}, {
  3.8415486180203023`*^9, 3.8415486225756445`*^9}, {3.8459391876070404`*^9, 
  3.845939188555458*^9}, {3.8459392899583836`*^9, 3.845939376309356*^9}, {
  3.8459395950222054`*^9, 3.845939599235855*^9}, {3.845939747404271*^9, 
  3.8459397474932704`*^9}, {3.84594920045002*^9, 
  3.8459492149825373`*^9}},ExpressionUUID->"4a85fc80-e661-451c-aacb-\
7a62baa2d4f7"],

Cell[TextData[StyleBox["1. Solve y'' (x) - 6y\[CloseCurlyQuote](x)+9y=0",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8415475383917856`*^9, 3.8415475804938183`*^9}, {
   3.841548664782364*^9, 3.8415486675286756`*^9}, 3.8459393401664762`*^9, {
   3.8459396015393133`*^9, 
   3.8459396069079475`*^9}},ExpressionUUID->"e4edaba0-6b4c-4ef9-9ab9-\
e4acc37693bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq4", "=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], " ", "+", " ", 
     RowBox[{"16", 
      RowBox[{"y", "[", "x", "]"}]}]}], " ", "==", " ", "0"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.8415480019619675`*^9, 3.8415480084923086`*^9}, {
  3.841548050653679*^9, 3.8415480527221885`*^9}, {3.845939614524598*^9, 
  3.8459396290362453`*^9}, {3.8459492244803743`*^9, 3.8459492326245604`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"c3abac1d-6625-49d7-8755-5489dc190695"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"16", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.8415480152237024`*^9, 3.8415480531318903`*^9, 3.8415502081590767`*^9, {
   3.845939621492179*^9, 3.8459396297292767`*^9}, 3.845949240376786*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"e1ae2ebb-350e-4636-bdcf-b6c83db7b0f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GS4", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eq4", ",", " ", 
    RowBox[{"y", "[", "x", "]"}], ",", " ", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.841547583572585*^9, 3.8415476177826166`*^9}, 
   3.841547668165934*^9, 3.8415478585025377`*^9, {3.841547999263719*^9, 
   3.841548013294275*^9}, {3.8459396321173563`*^9, 3.845939636706153*^9}, {
   3.845949235368052*^9, 3.8459492385440474`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"167aeeaf-ab43-420f-afe2-f4b42b63c47a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "x"}], "]"}]}], "+", 
     RowBox[{
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "x"}], "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.841547624411706*^9, 3.841547668910844*^9, {3.841547859724581*^9, 
   3.841547884510466*^9}, 3.8415480169865503`*^9, 3.8415480550426908`*^9, 
   3.8415502090000687`*^9, {3.845939623771781*^9, 3.845939637564933*^9}, 
   3.845949242385496*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"27627247-6082-49ad-bad3-31c3a8cd4a81"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.841548488067194*^9, 
  3.84154861073958*^9},ExpressionUUID->"2caf186c-e8f0-4f8d-a9de-16f7b99cc054"],

Cell[TextData[StyleBox["2. Solve the above differential equation using the \
initial conditions given as\[LineSeparator]y(0)= 1 and \
y\[CloseCurlyQuote](0)= 1",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8415475383917856`*^9, 3.8415475804938183`*^9}, {
  3.841547714855311*^9, 3.8415477707922544`*^9}, {3.841548482559997*^9, 
  3.841548485734109*^9}, {3.841548913320019*^9, 3.841548914903326*^9}, {
  3.845939657696336*^9, 
  3.8459396578243637`*^9}},ExpressionUUID->"8d49d890-c762-4399-9157-\
3957a75d019d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PS4", " ", "=", " ", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/.", 
     RowBox[{"GS4", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"1"},
        "C"], "->", 
       RowBox[{"-", "10"}]}], ",", " ", 
      RowBox[{
       TemplateBox[{"2"},
        "C"], "->", "3"}]}], "}"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.8415477856974025`*^9, 3.8415477870195136`*^9}, {
  3.8415478537367554`*^9, 3.8415478554479136`*^9}, {3.8415478878958178`*^9, 
  3.841547898866685*^9}, {3.841547989161253*^9, 3.841548102696391*^9}, {
  3.841548133205283*^9, 3.8415481483402805`*^9}, {3.8459396606219645`*^9, 
  3.8459396607461033`*^9}, {3.8459396996063137`*^9, 3.845939702406128*^9}, {
  3.845949252542469*^9, 3.845949281788952*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"26e8a2c0-7c6b-47bd-8565-155281b7a413"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "10"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "x"}], "]"}]}], "+", 
  RowBox[{"3", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.8415481177557387`*^9, 3.8415481491507483`*^9}, 
   3.8415502122246904`*^9, 3.8459396618256598`*^9, 3.8459397031484013`*^9, {
   3.845949256232298*^9, 3.845949282312929*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"0db69071-81d3-4066-9dc6-ef64b5ba035b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.8415484903975644`*^9, 
  3.8415486138123183`*^9},ExpressionUUID->"8f1753c6-369c-4cda-8a42-\
fe4c5ba5c505"],

Cell[TextData[StyleBox["3. Solve the above differential equation using the \
initial conditions given as\[LineSeparator]y(0)= -1, 1, 1, -1 and y\
\[CloseCurlyQuote](0)= 1, -1, 1, -1 and plot the graphs",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8415475383917856`*^9, 3.8415475804938183`*^9}, {
  3.841547714855311*^9, 3.8415477707922544`*^9}, {3.8415482741162243`*^9, 
  3.8415483208190427`*^9}, {3.8415484680690794`*^9, 3.8415484798078566`*^9}, {
  3.841548918259204*^9, 3.8415489223133554`*^9}, {3.8415495530347576`*^9, 
  3.8415495539412537`*^9}, {3.845939678711643*^9, 3.845939684915474*^9}, {
  3.845949287401972*^9, 
  3.845949310785376*^9}},ExpressionUUID->"11d36646-098f-4bea-82d5-\
a2a9f2ebc768"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PSX4", " ", "=", " ", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/.", 
     RowBox[{"GS4", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"1"},
        "C"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "1", ",", " ", 
         RowBox[{"-", "1"}]}], "}"}]}], ",", " ", 
      RowBox[{
       TemplateBox[{"2"},
        "C"], "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", 
         RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
         RowBox[{"-", "1"}]}], "}"}]}]}], "}"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.841548309335477*^9, 3.8415483410444107`*^9}, {
  3.8459396894843807`*^9, 3.8459397098550878`*^9}, {3.845949318795947*^9, 
  3.845949337833913*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"6d5e13f9-d61e-4a4e-92fb-f70daf2ca37b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}], "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"4", " ", "x"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "x"}], "]"}], "-", 
    RowBox[{"Sin", "[", 
     RowBox[{"4", " ", "x"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "x"}], "]"}], "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"4", " ", "x"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}], "-", 
    RowBox[{"Sin", "[", 
     RowBox[{"4", " ", "x"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.841548344767888*^9, 3.8415502153895435`*^9, {3.845939693379458*^9, 
   3.8459397104665995`*^9}, {3.8459493348202467`*^9, 3.845949339785213*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"2671f5ff-1efd-4cc7-ae1c-7574ebc86217"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"PSX4", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", "Thick"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Green", ",", " ", "Thick"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Thick"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Yellow", ",", " ", "Thick"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "PSX4"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8415483620828695`*^9, 3.8415484173204575`*^9}, {
   3.841548563227775*^9, 3.8415485885494246`*^9}, {3.8459397131271687`*^9, 
   3.845939717588561*^9}, {3.845949345114458*^9, 3.845949348479683*^9}, 
   3.8459493894177303`*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"4edbd21b-4303-416b-a378-3623ce182250"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwtXHk0Ve/3vpdrCCmJpKI00agUJXpPUkqRFFEyJIkU9VHmeQgJFcqQsSQk
aTDbJ4SQZMyYeR4u955j5ne+a/3+sp51zt3v8+x3v+/ez71r2XLDWtuMg0aj
rWTQaP/7a/oxZGJ5mQe/7br7pFNKHaydF99xbIEH581MCurgrIOS028NHs3w
4EVlnjpLBrWwoyPn5yiTB09+b/HKWfAPDAv0JDZ38eA4Up6yaK8CG8vDep+L
eXDvoM5cdL4IXLe34LceU89vGt/rHX6JIqO2Pv8lyIMvvduY9PV5I0qRjYjP
4uPBbzo67Ao91YRyfwh+iufmwek8z0KEZppQy8Ts74dL3PjX2lXG7deakbhq
zUqJcW6cXCu5aC7RhqJGnf3v/eLGHe/NXTUt7UTRyo3uqwK58W1er756Lvah
tNpzIbOPufGrNqWBWzT7Ub7599geL268/oyupmlMP2p7llaY5cSNZ664p1uh
PIA29XsuGN3hxjt2RShy2A+imKD99hnq3Pi7rbdTFv4Oo9h/ftYXV3Dj00Cb
eq46gYz5eX+7c3HjK9U2P/zuOYGkFB7vy6Bz4z9nay+64BMoKchnTHCOCz97
LKTy/CYmSlf2vFM1zIUXtEitTQplovwoJ3O1Ki48fItkw7jdJHItmyt9VM6F
l7fLihx/MYkwlsOOpBIuvCKe21QjfRKVqNv3MQq48PMTIrEpPZOoctbWtOgD
F75RaXilzrkp1HLlnpFyMPX+xmueYoIsFO01Vmj1hAtn8KV6KG1nIcOPVhLR
j7nwyGub/oorsVA39532OTcu3H1z2HEuCxYa+mp+LduGCx90mhX1AxZK6erP
HbDiwldfjRl7WM9CVitvia+z4MJf27e83jDEQsybN5sfmnDhRtfijZ4KsdGM
sMkVOW0u3FOE/wGHERvlos5vNzS58OiXveve3Wcj5ztGos/VufD2A7eu0b3Z
iFZ8vYGpwoUfqr/yqeEdG/E8uHopXY4Lj2g8H0SOsJFozaULMiIU36e1x3vN
CLS+emfTHSEu3JdR1eD+H4E2Vs0bpq/kwrErNrdr3Qm0pTzxnhw3F46vfVD2
IpJAe3DWU+VpBt5cKhgWUEGg/YVlIu4sBv73zsiuigYCHcyPel00wcCDj+fd
LOgkkEL2yQ9qgwz8kb7wnkKCQCoZL6ouNjPw9RdNNmzfSKJT6eaXQxsY+KZN
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
hP8DpQFf5Q==
          "]]}, Annotation[#, "Charting`Private`Tag$19233#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$19233#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwtXHlUTe/37tat20AqIdGglDTJVKHsk4pkCgkJUeYmhBSNKJWE5pKEPiGk
SEj7SGUoaRKleZ6He+85zfU737V+f7Wede7Z757evZ9nrXtbdNR11zFBAQGB
2WwBgf/9dXgVPjA9zSF/CgalrJ1Lg+y4vPq6CQ65O6VTbq8SDfkbn9hdHOGQ
vXMWTy3WoEG9/v333kEOORam/6TSkIY/S80ENPo4ZOrUT60sgoagCyX6Dl0c
Uq/680sLCxq6Z7Q8qm7ikEWsLeBrQ0P8Puca2XoOqSt/TF7tIA1bHw9LWdVw
SKu2tlBPBxperJvhXVjOIU84EA36rjQcCox6w/rFIYM9XCLvu9MgWaHcY1TE
IXNj0m6/uUyD2+nV+zK/cEhbRU0xnj8Ni7IwrB85pMinqBPygTSUsywLluZw
yKptLt+GgmkI2FY57pjNIQVkZypeDqNhVeyhFUlvOKR8cM+B9Ds0tLV2nvyX
ziFDwxIvRkfQEKV3/sHcFxxSNfSPg240DRuvTP7e+ZRDpiQ6yl+IpWH4a+CM
W0845JVMvbtn4mlInS1j+u0hh3RMMc2Xvk/DvsMJl4USOaS2bd6zE4k0iD1X
T18fxyGv/ewnnB/Q8IFOb78cxSGLtTQCVJJoOLNhncLbu4x/Nd0ugQxeGFaw
ezCMQyb4lAomMPhn9Y5grRAGS4Svt2ewt1oNeTyQQ3q8nVSpZOwtO+s4/DCA
Q64dE88YZs5rzOnXqfPhkHcjC/t/MP7cEb3sKHeFQ05dtKvblkDDBmuh+N0e
HHIkY06AbxwNvAe3ysLcmfq57Ws/GkPD4555oj/cOOTf0v8kqUgarA2S1ws7
c8jhP4/YBvdoEA7QvkCc4pBfLMXKNcJpyCrJeu51jEPKhr32+xFKw3F5k+as
I8z7PneVFt6kYd7xIjnuQQ75eGtutsJ1Gr693rNDx5ZDmps4HPjlS8PlyYbr
J2045NGYornLr9Cgufl0zqNdHFLf7OD4hks0hDZ6L5XfwiFjohUCLznRYKwt
Zr9nE9O/sUnWccdp6L90LyrclIlHgYp2tqfBalaqEMeIQ4rNaPyrtpsG1oEV
azcYcsgjKonCEltpyEjJcbu6ikOqOF0ReWhGw+z1ZXU8bQ6577/p/oZVTP/f
PCC7bCmHXK8cKXlTmwb3322Wp9U4ZKGs1rkWVRqqnMbeNSpwyNu3wS9Nmoa4
eNW7PyU55PYTuw/f66LgmV7sw3fiHPK5XuaZ+joKPhRIvn4owiGTbvD0S8oo
qBkY/XVhSoTUrR+sTMimQN6sdKZiP4PvF82c8KNAs9pcQbRbhFR/ktZ27jwF
a10+anPbREjzQyGG4Y4U2MakbCmsEyG1I5dvRnMK4nuv3HT5KUKe3cA3ooUo
SPPjxuz7LkL+rbARS+XyIWfuydQNBSKk6H/LTws28aGW2P117icRkviyQzoj
hw8LI5cKY5oIuXb3WTthNz4kGFf5zgoVIWX0J999KeRBWvmW8NFAEXKVyj2H
xek8yDnx+UFLgAi52vZW24pYHtTeSct95yVCSrmx+mxP80Ch3X/i8BkRMt/8
SlWTKA8Sw5Z5pFuKkOHvGz+rGXDhQUOQ604xEfJmyM3v9w8Mgr2E6C9fYRFS
ed67qhfGg6BiEKibzhIh/3FPF/srDUJK2PU+yTFhkvUtYtdY/gC8NPY/U9wt
TJoosT/5FPVDTrzXiU3FwmTCudHZX770Qs1el8PGt4XJ1+TZW59PdMLc0t07
ls4RJimNe7Y3nevgm9VusyI1NrnQJGrZ5fhvqBkj8yRnEZsU9RvaLsP5gaEN
ZcIvFdik2bw7u4lzRWjlYvU1fA6bvNZ87o3pphL8G7LN0kaYTTr+JM4kU2XY
WbjJqqlViKxVIvizQv6gqLGR3fAjIdKk08y5bGUTnr42ntP5QIjMySVEo4Oa
sLjog0JNvBApxQu7IlvXhOG2axpy7gmRNfdjA5Zfb0Y5D/2j/gFCZIfoTKuS
shbUyNQ7OdNBiLSL3Lbq1IF2tFiq5q6qIkTePbjHQXlJD9px+hfbKgqRLH27
4ctnetCtLet3uLwQWbHundnZVz0Y/dDCYEpGiOxxP7l+tX4vts93GvsrJEQu
CzE4MrK+D6+JZ/qGtQmSGzc//HTfaABjOr2WFzQJkqnq5X8dPAcwrdCsebxO
kFw4mLvo/bsBrPCvMj1VJUjaa4V03JAbRJXxURGzr4Jk5JyvI6q3B/FzD3Fr
NFWQ/PXI/Ivq2SGs/C62Xu+JIGkWGuC3PXQIO/8r7z/+UJCMGSmwXfvfEEo5
OlpVxgqSl5dtrNtdO4T2tYGzXwULknvfxBUHmHJxqrgk1tFJkFxxn/8wUJiH
Ms+jLeNPCpIepaq/YhbyUP2m/XiZoyDZSaVcObaSh9vMuXZwUJC8uz5PRs+e
hwmf5ijLbxckmy31PPyyeLj2pV3Kr2WC5H3jwK/le/j44reU3lstQbL9XqA8
+zQflSfz38ctESStzdf4NFzlo8hWnZ/HlARJO4F8vXuP+VjeNckblxQkrf6+
PdXWx0dz6YyrTeKCZHXq4wuHpvmYbXic81VEkPQmIxV9pChMDCyRvzvFImMX
39HIWk7habUHJhr9LHKhwu4oniuFdVt3F83sZpF2zpGjD70ptHLn7OG1scjQ
PerNVCiF+l9cT+bWscj49ed330ql8Gm3KvdRNYv86yd+svQthQtl/nrd/M0i
U36kzs/Oo1DwCHHb+ieLdBlcfsX9H4UXgvhya7+zSM2Dk/kWHRR2vkpNVipg
kVue3K0huRSWTElldecw75sEpMWL0hiX0FTrm8Yip99GCA0vo3FmfuTx46mM
/z91yVZDGn17Ng9uecwi7xydwXU3ofH42gyheQksUm91n/qVnTRWHzl+ayKa
Rep7erRz99G49ab8vOZ7LNL2xL4ICXsaV/z113wRwiJtLNXNVZxpfDKt/+Zu
IIs83jkupXyeRrklPcYeASyy/zhthx40hmx/8PWgD4v0MDwjLeBN49SF3TtN
vVjk2LixXLM/jWfvc/5pXGKRPdWNdscCaWzN/+goeZ5FfquxLr4ZQuPeXtd+
nguLZBto7tlxm8Yfsxd7VJ9mkZ5Jvh1v79JovO4vC4+zyFXXORc+RdKYfjQ0
5PFRFpm9ZWrwWAyNqsHEnOBDLDItaJXVqzgao17zE11tWeSIjvjN2AQaxapT
NfbYsEjTTNd7ixNpvCJwMGPtLhbZbtB+0uoBjQNLpI2UtzPPE33YCkk0Ht1R
UCBsySIDkuqPBjP498XLO3rMWWRevb5/DIMtEnWqS01YZHL71qObGPyxoOlo
ljGLNFl1kR3N2NPti+yNX8MiE7VjzwQy5z2Utbzot5rJn7ROgtx9GmWNpqaP
L2eRqv1rEizjaQx0yLi5VYdF1nnvO68QS+NY8PHZK5aySEWpDM07UTS+vOZa
oKnG+HdazuLNPcY/b49LqotYZL1WUZFXOI1zPfyWLlRgkS8u/8vrCGXydzb4
n+x8FpnR+XPdSBCN3mfu3Zo5h0XuMo3b+OIaU99jCSAizcRn8Zwv4sv0076X
j4ZFWaT/iYDA1As0bt/1bs8gm0WWaNtFDbrSKLiV5HQJMPm0SEioO0XjaSg/
UzMiQDpp7+Wl2NGouOafQgVfgLxNuFwO2ENj+YrWX0WDAiR5ZvFR4e00rlGn
V37qFCBVWy5UjRrT2Ks03fa2VYB8cF3zkdNqGpPmi8a8bBQgk1teWV/XplF0
pvzEg78CpM1ruZHU+TTmiKi+jKkUIJWn/fTfzKLRTUDb/k6pAKkZVsg9Jkzj
X55xvv83AdJzV+itTwMUhvZtvOiVL0B63ej94tBKIdGxQ8OdFCBfRLQuef2X
wtSaI6HHsgXIxUf+GWwgKfT4fN3aIlWATDm2kGUaQqH2xzARk8cCpLTFPVWN
qxQ2vonOXpMkQB64enlulguFFqlPF2rFCJAf9jnu/2lF4bzbP1tnBgmQ5+0P
zR5k5smPoKookWsCZObfja4qAhR6+zdYTPsIkN++1EVN9/Ox/cJQ2uAlAfLV
45v2H4v4mGU350LFCQGyVlfxJ+HHx9M2ikuKHQRI/pENTmXOfFS0WlKdf1iA
XOPxXmOWLR9vmK4xztorQD5riF13bzkfbTQPCsduEiBD4+mGwloeUsOPIw8t
ESAPL4uSWbqYh7ZB76ITVAVIxRiJpQdm8pCU+xFboyRAHjpwbHIzzcXQNQP3
beQESHqbk/rhr1xU8VqTsl1MgHSeLoh3O87FpIl456tV07h415j8lZgh3CvW
/8r40DTyTxnJBt4fQBXN2W/e20zjip2y7z3sB7Df0jB79Y5p9HaOjB1XGcBr
of6kDjGNa04cPJ+d0o8Zs+aVKahM43qx/BT1p30oOZfgTrZNoYeKUF5cXA/m
q9xdles8hZnBbgf26Xfg9qpb3dHHprCSV7RSsKMd/968mXT24BTauamOb41u
x95B3xlq26ZQPQQDftBtOBtdW0O0p7BP45xE8OtWPHpgW8T+nknsn1imYDav
GQUiRPn8k5N4crGkoYNtNa4T9snUcpzA8Bdfr2lpPUGN9lti4XYTzBw1elcZ
8QDnfk04zLdm8Nt/ixvLI3Aw6IPEJ/MJFBDYesHfcCOkzKAdti9hntMSvv9q
n4CMrLPs2e5x3DreGrhpFQmdKgcuZLmNo7hYoenxnHKoEjpdJH9qHLXL2lnp
jhXwpdVjkc+RcVQeC4nOnFEJiSlRPzftGkdixpKi+gO/YbdmuVr1ynF86Q0L
Aug/kLt8c9U4PYam5ikulHwdRBAGBiZXx1DD80OydlALCBUO1BVdGMO36vL5
GpUtcG5L6jUblzH8rqRCNSi1wk6b+eVnDo+hxeIlp72yWkHSadwpymQM/Rd2
Sls2tkFQNCb3CI/hL8d1+sfUOuFK/ybJqLBR/Gk6c/YXl17oOS/wVjlwFE0H
zd0N0nvBdjT7wHOfUXTSKZhnMdQLa9iaT0m3UZxZvyBx7bk+oOfPMOvZNYr2
p8aJra794GZeepmYN4p+j/DJa81BcEjY19b9YARvHaF7a9uGIPxNh3FF9Aje
06498oHFhdzii1Efb4/gCplbqtsVuCA/GbEp1GcE35UIFUXt5kLpwbKnOodH
MAt4CUk5XFivZOnipjiCiiBWv8aXB04G1YX75o5g8qTFv83RPIjbcVLJRHIE
g2JPPBV7yQPK50ap9NQwxpfPN4+uYfh0Y96KzLphNIlJS2hcxof5yeuGqYRh
5Fp+0G76wYeNH37sqI8YRufCRueCWj64l+9PLQwdZvbIhy3W/XwoFfTYH31l
GHe2uqKbFAU3HN58NLQbRnt9E9Z9KwreeJnKLrJmnt8uiyk5TEHzvXInsa3D
GHrmy5tUFwqM8wcVatYNY2+/RNCeEAr4i3V8vRYMY6l++vYQkgIV45y/DrOH
0V1PNGOsmAKrPVuWb5UYRtHY3hqpagqeXz/VvHCcxt1rO7P1Bin4e39krTCP
xmJq/6y14xSIZAXe6+tm5vZTSZcuYRqOtj8xy62h8aTjl6g18jSET626n1JO
47PkBzNrGD31aW4+FfaDxsRYj3YlHRrkNjWnHP5AI/dk/pL49Yz+Pnx2elMG
jUauzyxKNzJ67JLAPr1nNHa8dDd6tp2GX/8pirGYvfx550OFrQdpsO8jWe7M
Xje3tLiR7EADd4XDWHsws3cW7Vd/eoqGAA9h3v4AGtdl23YedqVBNve/nmIv
GmNCBt8VutPwRMiyFdxpzByv8au7TIP+5t7aDCcaV90ZXvnYm9H3lXolMQcZ
HhRTOtMkkIau+RWFEjY0Ss+rnTsvhAbPwxfQm9lLgybZPxLCaJjxZF720EYm
X21/FpbfoeF+9/t0R6CxwbiY9S6CBl09u6d/DGi0X2TuuiWaBvLC1ENLPRrD
VaXtbsfSsPNjUtwnDRorsxRI/3gamgVM7+ktolFg86UINUbfn9/YFvKI2WOq
dpsrLjH6nx0aeG2uDI1m8fWXLj+gIaps6dWb4oz/PUnemkk0LJlXfGFCkOEZ
l+a3MfwDsu1cXFzHKdT7MPg0jsGWyVInmnkUZvj3F+9n8L+OjMN7eim8yh/d
/o2x56SzZ983Zu91X5u/op05b/LcsNW6OgoLeecuZzL+hGXHbn75m0JFYstS
vQQalKfWbVhUQqFQrMgmuzgaXpvWr40opHCfpUa1QQwNG276ruQghQlPdnXk
RdJQWaKi7fmOwjftGz0n79JwTLZgcd8rCt/LtsV33KaB3n9CwZ7hwYX1Wnv9
QmkIfCA2tyKJwlJ3w+wfQUz/tD2X3BhLobvdxuIv12h4prmd8/4OheUmrx46
+dKwzm1wWiuYwlP53ZsKvGgofnt3JNGfwkkI+/XzIg2HxlcNSXtReOXOVssb
Z2nwvXG5efgMhXuWXzrGOU6DdPGCf6cdKWw+X6NbepiGZOncijo7Cr80mxtv
3k9DQYJgwZdtFKpH2QZu3UKDeGbIf7eXUfjsjt/DOC0a4kd0kgQ1KFTOdrTr
VKFBe31pzAVlCi+u37+6Yz4NO77LBh+QplDldmfeiAgNEQ33nZbw+PjYVkzW
tY4CNTXiWFwPHys0dHw2l1OQdbr54MxWPgZEpy2pKqSgmlLfwavko4aw+G+R
VxQozkhfjll8FPd9ceCHFwUurRq1t1/yceNuS09ZZwpycx7esE/h46HO4mb2
IQoOOt/7x4ri48Jog9vV6ylIKLl43ewCH7vnbozeP8GH3pSBZXMY3kC6Hzeq
6+bDOp+TNW2OfEx+8WirWDUfapbZLgu05mPqmks1B94w8+2OcfX3lXw8vMlk
Ge84H06eygqI0+KjZwSdkreLD9kmy3TPqPJxmfwTEeP1fNjHVQ6YMZuPm9+w
/6yU5UPUbrbODi4PsyzQY2UOD2TnFvlWpvPwgNR3pZ8TXHDsN9V6ksrDXysH
D1xs4cKbwpzfF5IYnmLG9Sv9zoXdl15qzgvnoV7xwbWxkVy4+/dO5X5XHor9
3e8UtJQLs+L3aTTo8LBuushtg+kQiCu3/+p6xsWKnQ8+ygT0Q22CaFFjMhd1
lu8VzoB+eDFfq/BPHBcvlgnDn/E+sJrtllMQzMXeP65F75h9FCUylvrwNBex
5UzGgG0vqPTN9N+vycUlStyZq+Z2w7oPq1d9fzrE6BZZ9VVEGzhZX49JTR3E
0hK/70ZWv8H+S0OR4t0+1Ofm2NekV+Im45FjdX59KHeod/t7h9+o+05KIOFs
H+a9sO6DuVU48cxk1fydfbgkeeidoecfjLn7KGG2VB82WxuZBxnXYOmRE86i
Yb3YtnzVJ5VXDWgiMCDJvdmDevr37jvMaWP2Oudp+uUevF/S6Bt5vA2l+Eqm
rqd6sNIkRtT1XRvWd1hd6rXowWsjV37N3teOnr8yGto5PWjg+VNWILIDMxIv
pv+73o0bXzXs2jTRhSrGUzsL/LrQPnmutYhHP5ZKG2vHnuvCsLk9jubv+tG7
3UvE2aELPT+Zj82h+7Hm9ugHWfMuDIy00z55bgDvNfNVHUW7cL3LNZ3aFYPI
DuqhBG93YmR98ha1BUOYYadZWuXTidsCxQoUDIbQfvmpZ8/cOvG5g9uuv7uG
MKem/dCuXZ1o7qa14O7NIbyg0/z14ZxO3HNrceZM/hC2l/+NJRI60Pls3rHy
HC5G/DfPXfZWB2qnRO/CSi5uuGKzvfNqB5q3Pww42cvFRLVKwfDDHWjxou5Q
vzwP93r8OtOg0oHifl4due48FNkmuTFzdgdOJDTWXgvm4ZtF25QD2R3oUvE0
iM30oVTRj0rd9nb8kjzn17IfPPymUGjs/bQdzz+sbNRZwMeLXLbcrrh2dM4Y
3fJel4+Lv5py1ULacX9Ck+KECR993T6n/HRqx0iNpo6UE3w0/JIzS0GvHT++
88q8+YqPT09mNn3MasP4dd8Eti2nsPLoA6UtKW0occOy6IwJhQIHQw7WRLah
nq19md5OCm12OlSPuLfhkdsHA9NcKRRcO7ts9co2FC198sqBmas6q6YlC1Ta
8NGg+5EXb5k5rduz1VqmDeW31TnE51H4UuXLt3NDregxccfP4R+FthLnyVev
WtHRe0tgoiiN14UPT61/0Irxd2fLC89m9PS0pVFJWCtOBcF5SQUaRfgq2b3O
raj88HOpKLPnlvdL0l4HWzE/e+jaqCGNdp1jKyW2tWL94NrDoSY0ZtSWv1qq
3Yr9GqV09E4a66py+7IXtOKT0n1uUvsZPVf2TMtCohWviFwI0rSncWVR1Kk/
Yy1oFKK+qP04jYcK/P873t2Cf1ZPKZg603gTXdqo6hZ0P7PQ0eQ8jW/e26pe
/96CdPjymkYPGsVfrnjwKLUFQ7MrRwQZnrA6VbFuRUwLshdHX7weyOzpZPEF
eYEt2CjyoSQ1hMaQBHrfzkstWBnwZcDpNo1ZUc1Rjcdb0O1f0fcyhoc0hZdU
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
lvyuvIq8afj9di7GKfVB0onAygWqAsRgceayJ+c7QdTrZJHqEgHCP4AcylDv
BLewzXlaWgLExplDUYeqOwDeSqSvWylAjJ2uc48w7oB6wfCQA6YCxHf689r7
rHZYmBizId5BgNAVdbpnfLkFYiqfpss/FiBcNoxj6uFaCDcpDp2vxiJKt+4R
v7c6m9E5j1bWarAI3/KX5sZhb2FirVdNojaLIJpztsW3Z8DJVZoai1exCGWD
+Yl6Os+BWBL0RdeURZA5LQGdjwNhcIbZmOkRFqH3X78DtT0Dd/z9eMLlPovI
790o7bS5BNl77kkuf8gi3rjr1efF/MIPZaff8h6zCNkgl4nK86WoXjRf6HIa
i5A3JbdK5JXh1KdLiQEfWUTymtw17gcq8eWjlb9jqlnEWft5Ivq+1Sjp+nzD
lzmCBHv1iNNvsgmPJUdL/ZkvSLglrEm8NacZc34H1HcrCBKu59RTxk414ykj
O08ZdUFCNTAd+6RbMF9sZsYRfUFi5cwFojKHWtHzscsigb2CBPkZ8tXb27G9
ermAcYwgMXkqJs0prQeNZyqWWCUIEscvHB5ZQfVgBCGe4JgkSNxIcZa+btyL
Jv81G4SmChIznOixr8W9mOB+z/VfNmO/OtEsta0Pd82i6i9XCxJDG4Qmfk8P
YK5Z9qcseSFCZ1GkqkHHEDo0xa27rihEJM+f7HBicVHU++r73SpCBK13/dyR
BVzc9W7D28GlQoRi4o+j17dzsX3pzzTNNUKElieR/PI1FyVnNccn7hUi7jYO
W645w8PM5/nznQ8IEbP+O+G63I+H+yz+i153WIgoL8Oe5igeJvs53ft7XIio
2FiR4faZh/p8OljmIvO+2ZNFy2Yz/L9awvNGhBCx0V15zkgqH4Uu9g9bxwgR
W4oLFzh84GOqTNkF1QQhYqy1QCKgiI/cLVFnyUdChJz8x/TGXj7eyFU+NZYh
RByLrA2aoU2h1gGhjm9ZQsTEkTXb5NZRWDrc5hj9gTm/8qXGn80Uyi9/br8q
T4iIi7Oycj5OMfVevc+lTIhQS371i4qncDchV2X0W4iQmbiUEcHopZHasd0S
1UJE87sPSm1vKNwwl9yR2ihEYItdZ2wxhR0ZyT8vtgoRL2r+9U3+oTB0x/Ut
5p1ChI3HnHKZFgqrgiw3NQ8IEa1oFr19hEIvNZ2CdJ4QoS61Q+uCII3KebNM
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
emuZej2rgP8DqZlPJw==
          "]]}, Annotation[#, "Charting`Private`Tag$19233#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
Oc2hn1IyRIdULzputr72mtUcMty85erd/F4k6DDvEK07h3w3DgobdfahwBiU
PsI9h/7Y7tW4JDeI7o0fFIwOnUW/9VauLnEaRSM3OT5IB8wivUkDV82cUWQ+
W3DutdcsclApW2c4NYp20xVf4i6zaGX7huQ9N8YQuX6F/siJWWRtP48dcR5H
LgbV7ti6WeTzDL14pziJbBLP9A2nzKDHF8jR1r4pFP5+QKcuZgZFKLde+Exj
oqLK29FfwmbQdpHHssYSTCS+GHkwxGsGfaziqog+yUTVljUvVaxmUD6wElML
mWiflJGTi+QMkgS+9t3eLOSg2Vx+Zu0MSl80/HcohoXij9lJ6QrOoMC4Ky/5
slmI8HpYLbw0jRJq1xvEtFD36c7i7Xlt00g3NiuxU42N1qfvnSYSpxHT6LNy
1y82OvD517H2yGnkWN7pWNbKRq61ZzPLQ6bRxJbPh03H2aia0+1szL1pdLzX
GbkIEeihzfsvWhbTyFpDl5ZkQqD3d/VEN5lSz8NqYqusCNQdUevAd2QahVwr
eZ/pRCCd0kmJlr3TaHRcIPBUMIHYm1W8726YRtUaOcbBOIFkdAqbbFZPI1d1
3ty5SgKZnDq87YjANOKNG20RaibQ6wf23RvnSXRyz2CB+iSBmpJm9nCzSFRJ
nF21Z55APPkBEWPDJJJ8Keg0xE2ii/0v9ItaSGRnWxK9W5xE4Us7kzJqSfQq
PWVlC+Wnvq4tJUJ/kSg5zq1fSoVEYge7M6w+k4hpV7olYR/lv62uLx/MJZG2
8yvD6gOUH7vDcUb9FYkGsl21XxmT6M9/knw0ysd+O54mccSSRNZjOM31KYkM
jAwfpttQcbbbzPUHkch401n5l/Yk8nPjZp31I9HeAvNBK2cSiRb9N1J5l0Sx
wZMfy11J9ILLqBeoz7z5Fp82dxJpHBptzaV8584n0zuee1L+vl69KpbK4x1b
vVI3gERD6+vKBcxIJLyude26YBJ5WN1CnlRdk7oFvxJDSbTixbqCKaruk31/
N9Y+IVHS8KccWyBRh04l7WMkiVTVLV7+1aTq3mTgfDiGRPitpTQjdWpOssIW
YXEkOv4lNf6rAonq8yVw3wQSdXPoRahvIhHHoTuRcpS/v3mgL/jZehLJWhyq
u0P5f3pIgP9aERLpJ7TfcU8hUXTN1vuP+Kn6R1I9FVNJtGVd5a0FThIZ3lnf
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

          "]]}, Annotation[#, "Charting`Private`Tag$19233#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3, 3}, {-1.41421356118959, 1.41421356118959}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"sin", "(", 
           RowBox[{"4", " ", 
             TagBox["x", HoldForm]}], ")"}], "-", 
         RowBox[{"cos", "(", 
           RowBox[{"4", " ", 
             TagBox["x", HoldForm]}], ")"}]}], 
       RowBox[{
         RowBox[{"cos", "(", 
           RowBox[{"4", " ", 
             TagBox["x", HoldForm]}], ")"}], "-", 
         RowBox[{"sin", "(", 
           RowBox[{"4", " ", 
             TagBox["x", HoldForm]}], ")"}]}], 
       RowBox[{
         RowBox[{"sin", "(", 
           RowBox[{"4", " ", 
             TagBox["x", HoldForm]}], ")"}], "+", 
         RowBox[{"cos", "(", 
           RowBox[{"4", " ", 
             TagBox["x", HoldForm]}], ")"}]}], 
       RowBox[{
         RowBox[{"-", 
           RowBox[{"sin", "(", 
             RowBox[{"4", " ", 
               TagBox["x", HoldForm]}], ")"}]}], "-", 
         RowBox[{
           RowBox[{"cos", "(", 
             RowBox[{"4", " ", 
               TagBox["x", HoldForm]}], ")"}]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.841548395414299*^9, 3.841548418480526*^9}, 
   3.8415485895555096`*^9, 3.8459397181716003`*^9, {3.8459493423345213`*^9, 
   3.8459493491089506`*^9}, 3.8459493903042727`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"00f0d3ab-daab-4b93-8c5a-102a97de1e3f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Q5 Solve the following second order ordinary differential equation \
",
  FontSize->18],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"4", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d", "2"], "y"}], 
       SuperscriptBox["dx", "2"]]}], "+", " ", 
     RowBox[{"24", 
      FractionBox["dy", "dx"]}], "+", " ", 
     RowBox[{"37", "y"}]}], " ", "=", " ", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3b4c09a0-5284-401a-bcb1-9023c6e8d2e7"]
}], "Subsection",
 CellChangeTimes->{{3.8415474662984734`*^9, 3.8415475369498286`*^9}, {
  3.8415486180203023`*^9, 3.8415486225756445`*^9}, {3.8459391876070404`*^9, 
  3.845939188555458*^9}, {3.8459392899583836`*^9, 3.845939376309356*^9}, {
  3.8459395950222054`*^9, 3.845939599235855*^9}, {3.845939747404271*^9, 
  3.8459397928573184`*^9}},ExpressionUUID->"7174c15f-723b-4db9-bdbb-\
cb3d566adc8e"],

Cell[TextData[StyleBox["1. Solve 4y'' (x) + 24y\[CloseCurlyQuote](x)+37y=0",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8415475383917856`*^9, 3.8415475804938183`*^9}, {
   3.841548664782364*^9, 3.8415486675286756`*^9}, 3.8459393401664762`*^9, {
   3.8459396015393133`*^9, 3.8459396069079475`*^9}, {3.8459398001159554`*^9, 
   3.845939809486808*^9}},ExpressionUUID->"3bdc9cca-c9c3-41cf-99da-\
34f0295e8069"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq5", "=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"4", 
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}]}], " ", "+", " ", 
     RowBox[{"24", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], " ", "+", " ", 
     RowBox[{"37", 
      RowBox[{"y", "[", "x", "]"}]}]}], " ", "==", " ", "0"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.8415480019619675`*^9, 3.8415480084923086`*^9}, {
  3.841548050653679*^9, 3.8415480527221885`*^9}, {3.845939614524598*^9, 
  3.8459396290362453`*^9}, {3.8459398129274197`*^9, 3.8459398615317793`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"76ce203d-0d90-4842-919a-3cdfc6dafe32"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"37", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{"24", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{"4", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{
  3.8415480152237024`*^9, 3.8415480531318903`*^9, 3.8415502081590767`*^9, {
   3.845939621492179*^9, 3.8459396297292767`*^9}, {3.8459398225308723`*^9, 
   3.8459398314472785`*^9}, 3.8459398623261037`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"109667c6-6e01-4550-979e-1191ca935d62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GS5", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eq5", ",", " ", 
    RowBox[{"y", "[", "x", "]"}], ",", " ", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.841547583572585*^9, 3.8415476177826166`*^9}, 
   3.841547668165934*^9, 3.8415478585025377`*^9, {3.841547999263719*^9, 
   3.841548013294275*^9}, {3.8459396321173563`*^9, 3.845939636706153*^9}, {
   3.8459398346382694`*^9, 3.8459398378771954`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"dee71960-394b-4da2-b298-4d321ed68f73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "x"}]], " ", 
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["x", "2"], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "x"}]], " ", 
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["x", "2"], "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.841547624411706*^9, 3.841547668910844*^9, {3.841547859724581*^9, 
   3.841547884510466*^9}, 3.8415480169865503`*^9, 3.8415480550426908`*^9, 
   3.8415502090000687`*^9, {3.845939623771781*^9, 3.845939637564933*^9}, {
   3.8459398390292377`*^9, 3.845939864317046*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"4eee5bf4-ea0b-4475-8cbd-045afa5d52fd"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.841548488067194*^9, 
  3.84154861073958*^9},ExpressionUUID->"0700e91f-0ef8-4b62-8021-6ae5d3f7a1db"],

Cell[TextData[StyleBox["2. Solve the above differential equation using the \
initial conditions given as\[LineSeparator]y(0)= 1 and \
y\[CloseCurlyQuote](0)=0",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8415475383917856`*^9, 3.8415475804938183`*^9}, {
  3.841547714855311*^9, 3.8415477707922544`*^9}, {3.841548482559997*^9, 
  3.841548485734109*^9}, {3.841548913320019*^9, 3.841548914903326*^9}, {
  3.845939657696336*^9, 3.8459396578243637`*^9}, {3.8459399102007294`*^9, 
  3.845939910724469*^9}},ExpressionUUID->"50069d54-6498-4be6-8477-\
77fdcbf30606"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PS5", " ", "=", " ", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/.", 
     RowBox[{"GS5", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"1"},
        "C"], "->", "1"}], ",", " ", 
      RowBox[{
       TemplateBox[{"2"},
        "C"], "->", "0"}]}], "}"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.8415477856974025`*^9, 3.8415477870195136`*^9}, {
  3.8415478537367554`*^9, 3.8415478554479136`*^9}, {3.8415478878958178`*^9, 
  3.841547898866685*^9}, {3.841547989161253*^9, 3.841548102696391*^9}, {
  3.841548133205283*^9, 3.8415481483402805`*^9}, {3.8459396606219645`*^9, 
  3.8459396607461033`*^9}, {3.8459396996063137`*^9, 3.845939702406128*^9}, {
  3.8459398857383013`*^9, 3.845939913458727*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"006931a5-2241-4d7f-b96c-a2826597f489"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "3"}], " ", "x"}]], " ", 
  RowBox[{"Sin", "[", 
   FractionBox["x", "2"], "]"}]}]], "Output",
 CellChangeTimes->{{3.8415481177557387`*^9, 3.8415481491507483`*^9}, 
   3.8415502122246904`*^9, 3.8459396618256598`*^9, 3.8459397031484013`*^9, {
   3.845939894530903*^9, 3.8459399140071683`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"8762ae79-a1bc-4d29-9e96-c41adaabf2dc"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.8415484903975644`*^9, 
  3.8415486138123183`*^9},ExpressionUUID->"2690aed8-ca67-4311-8881-\
0f325bc0b989"],

Cell[TextData[StyleBox["3. Solve the above differential equation using the \
initial conditions given as\[LineSeparator]y(0)= 1, 0, 1, -1 and y\
\[CloseCurlyQuote](0)= 0, 1, 1, -1 and plot the graphs",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.8415475383917856`*^9, 3.8415475804938183`*^9}, {
  3.841547714855311*^9, 3.8415477707922544`*^9}, {3.8415482741162243`*^9, 
  3.8415483208190427`*^9}, {3.8415484680690794`*^9, 3.8415484798078566`*^9}, {
  3.841548918259204*^9, 3.8415489223133554`*^9}, {3.8415495530347576`*^9, 
  3.8415495539412537`*^9}, {3.845939678711643*^9, 3.845939684915474*^9}, {
  3.8459399237323413`*^9, 
  3.845939942733593*^9}},ExpressionUUID->"7752e5cc-16f6-4297-93c9-\
ba21058dc7d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PSX5", " ", "=", " ", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/.", 
     RowBox[{"GS5", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"1"},
        "C"], "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "1", ",", " ", 
         RowBox[{"-", "1"}]}], "}"}]}], ",", " ", 
      RowBox[{
       TemplateBox[{"2"},
        "C"], "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "1", ",", " ", 
         RowBox[{"-", "1"}]}], "}"}]}]}], "}"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.841548309335477*^9, 3.8415483410444107`*^9}, {
  3.8459396894843807`*^9, 3.8459397098550878`*^9}, {3.845939919396928*^9, 
  3.84593996907773*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"65682de8-f936-4b98-8393-e3c92e5f1910"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}]], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["x", "2"], "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}]], " ", 
    RowBox[{"Cos", "[", 
     FractionBox["x", "2"], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "3"}], " ", "x"}]], " ", 
     RowBox[{"Cos", "[", 
      FractionBox["x", "2"], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "3"}], " ", "x"}]], " ", 
     RowBox[{"Sin", "[", 
      FractionBox["x", "2"], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "x"}]]}], " ", 
     RowBox[{"Cos", "[", 
      FractionBox["x", "2"], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "3"}], " ", "x"}]], " ", 
     RowBox[{"Sin", "[", 
      FractionBox["x", "2"], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.841548344767888*^9, 3.8415502153895435`*^9, {3.845939693379458*^9, 
   3.8459397104665995`*^9}, {3.8459399613679104`*^9, 3.8459399705340457`*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"b9bac1a6-4e98-43ad-be94-fcb2878ba65c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"PSX5", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", "Thick"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Green", ",", " ", "Thick"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Thick"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Yellow", ",", " ", "Thick"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "PSX5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8415483620828695`*^9, 3.8415484173204575`*^9}, {
  3.841548563227775*^9, 3.8415485885494246`*^9}, {3.8459397131271687`*^9, 
  3.845939717588561*^9}, {3.8459399738160048`*^9, 3.845939977005584*^9}, {
  3.8459493721751328`*^9, 3.845949378474862*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"60508b30-aec7-4d97-a9dc-fbb2075b28e1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwVlnc01/8Xxz92+GYlUTIzQpKd0X0XhVQkKymiIjvZlL1HSskqKzI/HyFC
vD5ky96RlZm9N79+f93zOOeee+6543kvt4mt1mNSHA43TYLD/d/KkPYF8XKs
IZHGL+w80ReJzCxNXl15q8j+nWO15VkZ4qMFJeG0jFX0nfvNn7R9aWJh7fdu
x6RVVBbEeEm0Q5p4xxkvdCJyFd0iKQwX8JAmvul73XXXdhWpz57nxXdKEenj
9QWHz62ipli563GRkkQarsnWmawV5LVJefvNJXHiYMKRppGUFaSoN3pGiV2c
mMsmXNsbt4J4+aMrxHYuEDWP2X2vCVlBKn6nMohFF4jRlDsZyRYriFOBWTZD
/AKRZ/6oz12hFVR0uTwEpMSI8qVSkg2Zy2jZl7tipUaE+J+M/nli8jIajayi
oX8lQhwqcBMqjl1Gb1omA8P1RYg+uYgrLfif//k5R/ycMLE+Se2o99Nl9E79
/n82bMJE7cD7k7Jnl9EnM41lXb+zRCtt/5iMjCUU70YjEB/PT0w+KJUQSl5C
DGZhHeX2/MSejKWW7NgltGlu8YTvOj8R279HQQhZQm0eWHjlNh+ROV3c/qvV
EtIcz5/kNuQjlm8Oq1eJLSGhuidmfOfOENmlHQ+Kny0iTK05znqfmxgQMiJZ
ZrKIKhZctE0HuYlLQ+qWFXcWUcCCtMHrMm5idSBPX7XUIqKWox5668ZNtO5v
/dK+vYAMPQtXzu9yESs8hB7Pei+g7is3nz+l5CIa/xhu4ngzjwZzvQMU/NmJ
Kopbj397zyOXRemLdursRNFiBlzCs3nU03Z6ip6JnbiXdVmS7fY8mvyUczEy
6RQx5k1qwjGGeUS6433Gq+okse2hmfWRiDnUMRlh78HGRryMW6RbCZ5FD68V
SHPRsxAF3agy81xnUUmoe5rL6HEiwxqnku3TWRROF+YhUHicODSl6TynOotw
nU67/gbHiW6t+cOTVLOoNPrhB6lsZmL+R6e8Af+/qC7W78fve8eIPIoHt2u8
Z5B3K3+V0wYDsY1RUSTWfgY97+DTm+piIL6cdKe0Np1BzAcP6d8WMBB/vdou
Zb46g17RaOskPWMgRo2t8T46MoPGOLNiV0boieRBs+ukr6ZR+cSby4Tlo8TJ
jr5YLGEKrUxmdTua0hDffj7hwBw+hfzRCdHFczTEKx66t6ZfTCEHIcn2hi1q
4ke+LtJIoylEzy9omvSKmqjn0mo5zDOFJgJXR4mVR4j1p2sVX2ZOIkvJTDJl
GSpipnnBaFnRBJq7ESIqYkpO7DJJ5FRPn0BTQxfvnpAiJ+Luh97/9W4CJWpP
ZT+gIifq3jbt33KYQL2RP9gPc8iIpHLH2qUkJtDME7Zihz1SogHtcyKBMI6i
eBz/pmSTEP0pjA4uJY6jZw98q0l9SYh5h9cVWiLGUXIpii00ICFSrvF8m7Me
R21hN9tpaUmI+YMdhLMi42jzevmSsy2OSIMXT0zN+IOqmV9ahYUfIKkMjt/i
MX+QncJHNdy1A2ScQnOqKvAPOnE5apricB8VRY9Fjzz5gzReupypst9HJp5v
Ik7z/UGq1BvUo8Z7qFRz5cX75DGEtSTd6dDdQRarXwxD40YRaY5QHT5lA8VK
L8ubhYyibg0nMUurDVTvKnZKyW0UQajck2jpDcSHI/Tv3B1FUXRbO1I/19HI
fzm6Fmyj6K+p/3PfvTWkw5+uqRYzgmJtGPwz7VaR39OJ83xBI2g37k/4GraK
8nPO0JO4jCAxpdvHUhhXEYNEavM3vRGkFPkHz124gpog6brgiREUvjkgkri/
jLzzJYPpRIZR3d0Wz81/ez0kW6BSSzuM9r7EMrO4LCEFdIHy5ewQKuy4yRN2
awltNIn6zmcNoWc1arxbW4vIakLwxc+zQyh9u6wy/9sC0mc9/SxE4DcaYXix
sqc7h0RfUtyl5B1AMxNepCmU0+hkadv7afIBNOtx8Uhe4xSi2IjvaZz8hTrb
DqalXk2hQWtx7VdZvxAHf8RwGtsUCrlvpMEq/gud84m1OJSYRFMKJVeFLvej
t31Y858X46jDxc/vP95+FMzAFn1UbRxVFGr8WCDvR3d/1ZunMI+jaJFJrKC+
D1UuDvLR5P5ByuzHFBQ0+1C39a3T5WNjKGnXSvyWUS9q+W+blu7hKAqTkX0m
drkXbV9xuBcpPoqcn5PlMfH2IlcZv3P25KPo1mzsud7JHmR57l3y7cwRtP+r
VtDYpgedXXKk/LUwjAxKuTjtX3Sj559V7lKq/UbHXLtoo+M70ZlHY39T3fvQ
1uE246JbJ9qZLOliEO1DQwGcrKoGnajm3crc+dFelPHW4swOaycK7HjA5KnW
iy7l4RQfRHcgK5PxdDmeHvR0SsSG/3U70h+VW9lZ6US3bLQcPO3akWlohfU0
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
cvHwkArzfniTNIqHC/4H6U8Fsg==
          "]]}, Annotation[#, "Charting`Private`Tag$18938#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
ALy7AlA=
          "]]}, Annotation[#, "Charting`Private`Tag$18938#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
x28Ep2l6C2hHcaPdhPy+VcsRrBxK1c46xY2GuV+ZOwuN4OYGo8GUHi5kJplp
pJ84jG0t5zllfnOioLfKd3nlhjCSzedIldqE5ANYLdkoA7hQ9VHhoXFWJFza
mjDBMoCfsh1eMP/Ciljpj7sbxvvxhUcdAneKWdHglX2m9172Y9U3dtWikawo
wtrm1I59/ZhJ32pOXYkV/TxUckRWuw/LcW7lEA1iQWlrLvsMbXpwoivN+qgC
M4pSU7+qqN2DzboKbBuEmZH3NeYCAUoPLrLXJtiyMSPDqaS9PePduERWYqrq
KxH97a+RtnXtxtq2zDqXo4nobKmEuMfNLnzhq/1NoVkmtMW3kyv+cQeWzRX5
NVZFQMv/Vvhn/DqwM3dd+858AvoWKr7j2NkOfHlXwrrzYwLKjnPetbqjA0vZ
FnZrexKQVgFB83x8O3Z+kcA7LElATj/lXCXvt+GDsgefPBf/BwG5nM+u8HzB
0ZpKuseG10G/xOy1eFMLnrtSGHe/fB0Ea9NK2iJa8I5KufJ/yeuQM6rarsLR
ghcawyQMzNehU8iOeYPYjMmoa/VhyxrIhn+8FLPcgEXsa8xGP69Cj72LbP73
Ghx+1UAltWUZKr4aqRVl1uAAgcJhg7fLkGmuolvuVIO7uZcDtsYvg+exDevG
mc/4mMptVabzy7BZLvb+z7VqTMxfYVacWQJ9WuGyuOAn7CzuV9m9bQmuMy9F
k+5WYL7Fs/FZfougu4izFPgqsHzj9taaC4sg8DO8UvNROd6sLydG0F+EvAbh
RctnZbhOqCqVun0Rxu9rWT0oKcV7lQJLvIoWwEIiVJZ5sggz5yivPl+mgbef
bEz9ozx8yKPL1enePBj+me3Oz3yNbbRbOnj85kHy4gfx+A+v8ObX4bl19vPQ
pa/75mLfS2y9VG0XdHAe9gud71wTzcKOFprN6+Nz8M2NomJ17Cne4mZszqk7
B62vxIZMT5tjabFW3hWeWWC5cFwiXEcLfrQEy0fRZyBHPt2bu/QicHfGmRu2
zcDXPqf8Z4Y+0IrPWhiEzYB3/snjv3dEAin1n8jOxT+gmwxJ/AEpkNOxs4yn
dxpe3lNHLxRfw+Dk5SmJ0ilgqX5axq6cB1Yh2bvexU+BzTLbgf/U8uHvRuuJ
q9emIKJgcofQ0wLof/jvo+PeKdASKuEfzngLHeVkq6PPJyFz0ozZtbAIPDdP
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
oMbw
          "]]}, Annotation[#, "Charting`Private`Tag$18938#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$18938#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3, 3}, {-25.586458009153077`, 26.845506154381695`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
            RowBox[{"-", "3"}], " ", 
            TagBox["x", HoldForm]}]], " ", 
         RowBox[{"sin", "(", 
           FractionBox[
            TagBox["x", HoldForm], "2"], ")"}]}], 
       RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
            RowBox[{"-", "3"}], " ", 
            TagBox["x", HoldForm]}]], " ", 
         RowBox[{"cos", "(", 
           FractionBox[
            TagBox["x", HoldForm], "2"], ")"}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{"-", "3"}], " ", 
              TagBox["x", HoldForm]}]], " ", 
           RowBox[{"sin", "(", 
             FractionBox[
              TagBox["x", HoldForm], "2"], ")"}]}], "+", 
         RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{"-", "3"}], " ", 
              TagBox["x", HoldForm]}]], " ", 
           RowBox[{"cos", "(", 
             FractionBox[
              TagBox["x", HoldForm], "2"], ")"}]}]}], 
       RowBox[{
         RowBox[{"-", 
           RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", 
                TagBox["x", HoldForm]}]], " ", 
             RowBox[{"sin", "(", 
               FractionBox[
                TagBox["x", HoldForm], "2"], ")"}]}]}], "-", 
         RowBox[{
           RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{"-", "3"}], " ", 
                TagBox["x", HoldForm]}]]}], " ", 
           RowBox[{"cos", "(", 
             FractionBox[
              TagBox["x", HoldForm], "2"], ")"}]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.841548395414299*^9, 3.841548418480526*^9}, 
   3.8415485895555096`*^9, 3.8459397181716003`*^9, 3.8459399775810733`*^9, 
   3.8459493790186863`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"ce031bc8-7ab5-4d3c-afcb-e794a4ec88a7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
RulerUnits->"Inches",
WindowSize->{1141.2, 604.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingStartingPageNumber->1,
PrintingPageRange->{32000, 32000},
PageHeaders->{{
   Cell[
    TextData[{
      StyleBox[
       CounterBox["Page"], "PageNumber"], "   ", "|", " ", 
      ValueBox["FileName"]}], "Header", 
    CellMargins -> {{0, Inherited}, {Inherited, Inherited}}], None, None}, {
  None, None, None}},
PageFooters->{{None, None, None}, {None, None, None}},
PageHeaderLines->{False, False},
PageFooterLines->{False, False},
PrintingOptions->{"FacingPages"->False,
"FirstPageFace"->Right,
"FirstPageFooter"->True,
"FirstPageHeader"->False,
"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{595.2755905511812, 841.8897637795276},
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->False,
"PrintingMargins"->{{0, 0}, {0, 0}}},
SpellingDictionaries->{"CorrectWords"->{"Bhavesh", "Malhotra", "y'"}},
Magnification:>0.9 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->"ReverseColor.nb",
ExpressionUUID->"c9220811-8c48-4435-95ac-125ad86ddc85"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 224, 3, 88, "Title",ExpressionUUID->"d02dcc12-b590-46e3-b20d-47bb4b203632"],
Cell[807, 27, 260, 3, 47, "Subtitle",ExpressionUUID->"6f90060a-c910-4dfd-bb38-a3472f81b8b2"],
Cell[1070, 32, 563, 11, 119, "Subsection",ExpressionUUID->"36a5d6cb-d347-4e7d-9e9f-c59272907eec"],
Cell[CellGroupData[{
Cell[1658, 47, 794, 23, 43, "Subsection",ExpressionUUID->"87a42d99-5a7d-4a4b-813d-932e772a72b2"],
Cell[2455, 72, 304, 5, 36, "Text",ExpressionUUID->"8e90e40a-7f61-4019-96b4-ab49f0481d73"],
Cell[CellGroupData[{
Cell[2784, 81, 555, 15, 26, "Input",ExpressionUUID->"728dbf45-2be4-4c82-a77a-7c8f1aecad4e"],
Cell[3342, 98, 536, 14, 30, "Output",ExpressionUUID->"454cfc73-b3fb-45ba-add6-16ec652faa04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3915, 117, 406, 8, 26, "Input",ExpressionUUID->"5bd9a927-0c29-4927-ace1-0f9c66408f5e"],
Cell[4324, 127, 708, 21, 33, "Output",ExpressionUUID->"6214c19e-46b8-4e62-a8c6-52a209587a53"]
}, Open  ]],
Cell[5047, 151, 147, 2, 25, "Input",ExpressionUUID->"85d6e38e-2d29-43f5-a129-72378cac4661"],
Cell[5197, 155, 462, 8, 62, "Text",ExpressionUUID->"9bee83a9-0bed-403d-bf5a-fbf594d6493f"],
Cell[CellGroupData[{
Cell[5684, 167, 776, 20, 26, "Input",ExpressionUUID->"d9c0d82b-5f36-4e81-b63c-205b6a7b6a48"],
Cell[6463, 189, 390, 10, 30, "Output",ExpressionUUID->"50fd51c9-ac29-4f7f-b100-d3fc0c73a18c"]
}, Open  ]],
Cell[6868, 202, 154, 3, 25, "Input",ExpressionUUID->"87eda597-0d47-4bae-a215-dbd2a6e35b11"],
Cell[7025, 207, 604, 9, 62, "Text",ExpressionUUID->"e288db28-d4db-489c-bac2-977ac143f384"],
Cell[CellGroupData[{
Cell[7654, 220, 757, 23, 26, "Input",ExpressionUUID->"0f9e0273-69a6-4c3f-b1b4-4c10fdb381f1"],
Cell[8414, 245, 878, 27, 33, "Output",ExpressionUUID->"b67ddcea-61eb-4c76-b0f7-15a25a050c1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9329, 277, 761, 18, 26, "Input",ExpressionUUID->"b8f6f812-b19f-4b06-8bac-a5bcaa703f30"],
Cell[10093, 297, 29939, 587, 218, "Output",ExpressionUUID->"6fa8528d-5921-4639-8924-f1357f2c23a1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40081, 890, 807, 21, 57, "Subsection",ExpressionUUID->"be052b5d-6d27-45dc-b4aa-82ca7c7d9b95"],
Cell[40891, 913, 367, 6, 36, "Text",ExpressionUUID->"f01442db-047c-4c9a-9fc9-2e6ae76b8785"],
Cell[CellGroupData[{
Cell[41283, 923, 615, 13, 26, "Input",ExpressionUUID->"e283218a-45b3-4e63-8200-4914419a62fe"],
Cell[41901, 938, 487, 11, 30, "Output",ExpressionUUID->"364a7cef-443f-4c10-aea2-401cab0deaaa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42425, 954, 511, 9, 26, "Input",ExpressionUUID->"e7ab7dab-192e-414c-9abc-9833bde60551"],
Cell[42939, 965, 675, 21, 30, "Output",ExpressionUUID->"6ede0180-78ae-46f4-b8ae-b7d423b391c9"]
}, Open  ]],
Cell[43629, 989, 147, 2, 25, "Input",ExpressionUUID->"fb8b8b49-4595-45ee-9073-2001f2344338"],
Cell[43779, 993, 500, 8, 62, "Text",ExpressionUUID->"ff13e84c-f64a-41d9-a529-c94bcd2f65cf"],
Cell[CellGroupData[{
Cell[44304, 1005, 1110, 29, 26, "Input",ExpressionUUID->"c71bc020-b7ca-47d3-9cb9-fd74027167f1"],
Cell[45417, 1036, 1404, 40, 30, "Output",ExpressionUUID->"b0831a20-fdb1-4743-9e4e-5c6d65dd31e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46858, 1081, 862, 20, 26, "Input",ExpressionUUID->"fb289a64-88f5-4752-93c5-b60cd5b740d8"],
Cell[47723, 1103, 32945, 644, 218, "Output",ExpressionUUID->"83ae7c19-df0e-4cb1-b66b-1e7e3d14f516"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80717, 1753, 910, 24, 57, "Subsection",ExpressionUUID->"866b4dca-81ae-4de7-9446-87f6ce6b1c28"],
Cell[81630, 1779, 359, 6, 36, "Text",ExpressionUUID->"81c0b41e-70b7-46e7-ac0f-243c125dba8f"],
Cell[CellGroupData[{
Cell[82014, 1789, 607, 16, 26, "Input",ExpressionUUID->"f314d65a-7646-4fd6-99fa-e1c5f323657e"],
Cell[82624, 1807, 589, 15, 30, "Output",ExpressionUUID->"85bec810-adb7-494c-b236-e7d100fdb014"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83250, 1827, 455, 8, 26, "Input",ExpressionUUID->"aeb610b4-2878-472a-8e8f-1db465616c83"],
Cell[83708, 1837, 746, 20, 33, "Output",ExpressionUUID->"f417cc88-73b9-4156-891d-4fbb0e592563"]
}, Open  ]],
Cell[84469, 1860, 147, 2, 25, "Input",ExpressionUUID->"2e33ede0-1251-4683-b79b-bdda3ef4114f"],
Cell[84619, 1864, 513, 9, 62, "Text",ExpressionUUID->"fd46db45-716a-4706-be29-34bbe3485807"],
Cell[CellGroupData[{
Cell[85157, 1877, 878, 21, 26, "Input",ExpressionUUID->"122a236a-9ef5-4ab0-95ad-ee4919c7ef9d"],
Cell[86038, 1900, 424, 9, 30, "Output",ExpressionUUID->"6e2e76cf-9e04-42ce-bdd8-96e1776abcdb"]
}, Open  ]],
Cell[86477, 1912, 154, 3, 25, "Input",ExpressionUUID->"8e55ebc0-ff27-4695-b65b-96c96d94f19c"],
Cell[86634, 1917, 654, 10, 62, "Text",ExpressionUUID->"30c06493-1157-47cb-adbd-f96d6ef2a8c8"],
Cell[CellGroupData[{
Cell[87313, 1931, 832, 24, 26, "Input",ExpressionUUID->"91384ffa-4ab9-4ee5-8cd6-d2922698b1ca"],
Cell[88148, 1957, 891, 26, 33, "Output",ExpressionUUID->"f986eb63-d7ee-4721-a513-8adb9ead6136"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89076, 1988, 812, 19, 26, "Input",ExpressionUUID->"0fc964a8-09bb-4988-b6cb-04e1822d9fbe"],
Cell[89891, 2009, 50646, 925, 221, "Output",ExpressionUUID->"e8e21f01-2062-423c-a9c5-9e1f7522ddc6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[140586, 2940, 898, 23, 57, "Subsection",ExpressionUUID->"4a85fc80-e661-451c-aacb-7a62baa2d4f7"],
Cell[141487, 2965, 359, 6, 36, "Text",ExpressionUUID->"e4edaba0-6b4c-4ef9-9ab9-e4acc37693bf"],
Cell[CellGroupData[{
Cell[141871, 2975, 562, 13, 26, "Input",ExpressionUUID->"c3abac1d-6625-49d7-8755-5489dc190695"],
Cell[142436, 2990, 483, 11, 30, "Output",ExpressionUUID->"e1ae2ebb-350e-4636-bdcf-b6c83db7b0f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142956, 3006, 507, 9, 26, "Input",ExpressionUUID->"167aeeaf-ab43-420f-afe2-f4b42b63c47a"],
Cell[143466, 3017, 746, 21, 30, "Output",ExpressionUUID->"27627247-6082-49ad-bad3-31c3a8cd4a81"]
}, Open  ]],
Cell[144227, 3041, 147, 2, 25, "Input",ExpressionUUID->"2caf186c-e8f0-4f8d-a9de-16f7b99cc054"],
Cell[144377, 3045, 513, 9, 62, "Text",ExpressionUUID->"8d49d890-c762-4399-9157-3957a75d019d"],
Cell[CellGroupData[{
Cell[144915, 3058, 951, 23, 26, "Input",ExpressionUUID->"26e8a2c0-7c6b-47bd-8565-155281b7a413"],
Cell[145869, 3083, 503, 12, 28, "Output",ExpressionUUID->"0db69071-81d3-4066-9dc6-ef64b5ba035b"]
}, Open  ]],
Cell[146387, 3098, 154, 3, 25, "Input",ExpressionUUID->"8f1753c6-369c-4cda-8a42-fe4c5ba5c505"],
Cell[146544, 3103, 711, 11, 62, "Text",ExpressionUUID->"11d36646-098f-4bea-82d5-a2a9f2ebc768"],
Cell[CellGroupData[{
Cell[147280, 3118, 961, 27, 26, "Input",ExpressionUUID->"6d5e13f9-d61e-4a4e-92fb-f70daf2ca37b"],
Cell[148244, 3147, 945, 28, 28, "Output",ExpressionUUID->"2671f5ff-1efd-4cc7-ae1c-7574ebc86217"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149226, 3180, 972, 22, 26, "Input",ExpressionUUID->"4edbd21b-4303-416b-a378-3623ce182250"],
Cell[150201, 3204, 107199, 1872, 221, "Output",ExpressionUUID->"00f0d3ab-daab-4b93-8c5a-102a97de1e3f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[257449, 5082, 937, 25, 57, "Subsection",ExpressionUUID->"7174c15f-723b-4db9-bdbb-cb3d566adc8e"],
Cell[258389, 5109, 410, 6, 36, "Text",ExpressionUUID->"3bdc9cca-c9c3-41cf-99da-34f0295e8069"],
Cell[CellGroupData[{
Cell[258824, 5119, 682, 17, 26, "Input",ExpressionUUID->"76ce203d-0d90-4842-919a-3cdfc6dafe32"],
Cell[259509, 5138, 699, 18, 30, "Output",ExpressionUUID->"109667c6-6e01-4550-979e-1191ca935d62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260245, 5161, 509, 9, 26, "Input",ExpressionUUID->"dee71960-394b-4da2-b298-4d321ed68f73"],
Cell[260757, 5172, 976, 27, 42, "Output",ExpressionUUID->"4eee5bf4-ea0b-4475-8cbd-045afa5d52fd"]
}, Open  ]],
Cell[261748, 5202, 147, 2, 25, "Input",ExpressionUUID->"0700e91f-0ef8-4b62-8021-6ae5d3f7a1db"],
Cell[261898, 5206, 560, 9, 62, "Text",ExpressionUUID->"50069d54-6498-4be6-8477-77fdcbf30606"],
Cell[CellGroupData[{
Cell[262483, 5219, 929, 22, 26, "Input",ExpressionUUID->"006931a5-2241-4d7f-b96c-a2826597f489"],
Cell[263415, 5243, 461, 10, 42, "Output",ExpressionUUID->"8762ae79-a1bc-4d29-9e96-c41adaabf2dc"]
}, Open  ]],
Cell[263891, 5256, 154, 3, 25, "Input",ExpressionUUID->"2690aed8-ca67-4311-8881-0f325bc0b989"],
Cell[264048, 5261, 711, 11, 62, "Text",ExpressionUUID->"7752e5cc-16f6-4297-93c9-ba21058dc7d7"],
Cell[CellGroupData[{
Cell[264784, 5276, 910, 25, 26, "Input",ExpressionUUID->"65682de8-f936-4b98-8393-e3c92e5f1910"],
Cell[265697, 5303, 1447, 45, 42, "Output",ExpressionUUID->"b9bac1a6-4e98-43ad-be94-fcb2878ba65c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267181, 5353, 995, 22, 26, "Input",ExpressionUUID->"60508b30-aec7-4d97-a9dc-fbb2075b28e1"],
Cell[268179, 5377, 62941, 1156, 218, "Output",ExpressionUUID->"ce031bc8-7ab5-4d3c-afcb-e794a4ec88a7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

